-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrix_matrix_mult_streaming is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    A_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_0_ce0 : OUT STD_LOGIC;
    A_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_0_we0 : OUT STD_LOGIC;
    A_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_0_ce1 : OUT STD_LOGIC;
    A_0_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_0_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_0_we1 : OUT STD_LOGIC;
    A_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_1_we0 : OUT STD_LOGIC;
    A_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_1_ce1 : OUT STD_LOGIC;
    A_1_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_1_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_1_we1 : OUT STD_LOGIC;
    A_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_2_we0 : OUT STD_LOGIC;
    A_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_2_ce1 : OUT STD_LOGIC;
    A_2_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_2_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_2_we1 : OUT STD_LOGIC;
    A_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_3_ce0 : OUT STD_LOGIC;
    A_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_3_we0 : OUT STD_LOGIC;
    A_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_3_ce1 : OUT STD_LOGIC;
    A_3_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_3_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_3_we1 : OUT STD_LOGIC;
    A_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_4_ce0 : OUT STD_LOGIC;
    A_4_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_4_we0 : OUT STD_LOGIC;
    A_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_4_ce1 : OUT STD_LOGIC;
    A_4_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_4_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_4_we1 : OUT STD_LOGIC;
    A_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_5_ce0 : OUT STD_LOGIC;
    A_5_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_5_we0 : OUT STD_LOGIC;
    A_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_5_ce1 : OUT STD_LOGIC;
    A_5_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_5_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_5_we1 : OUT STD_LOGIC;
    A_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_6_ce0 : OUT STD_LOGIC;
    A_6_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_6_we0 : OUT STD_LOGIC;
    A_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_6_ce1 : OUT STD_LOGIC;
    A_6_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_6_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_6_we1 : OUT STD_LOGIC;
    A_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_7_ce0 : OUT STD_LOGIC;
    A_7_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_7_we0 : OUT STD_LOGIC;
    A_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_7_ce1 : OUT STD_LOGIC;
    A_7_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_7_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_7_we1 : OUT STD_LOGIC;
    A_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_8_ce0 : OUT STD_LOGIC;
    A_8_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_8_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_8_we0 : OUT STD_LOGIC;
    A_8_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_8_ce1 : OUT STD_LOGIC;
    A_8_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_8_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_8_we1 : OUT STD_LOGIC;
    A_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_9_ce0 : OUT STD_LOGIC;
    A_9_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_9_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_9_we0 : OUT STD_LOGIC;
    A_9_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_9_ce1 : OUT STD_LOGIC;
    A_9_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_9_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_9_we1 : OUT STD_LOGIC;
    A_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_10_ce0 : OUT STD_LOGIC;
    A_10_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_10_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_10_we0 : OUT STD_LOGIC;
    A_10_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_10_ce1 : OUT STD_LOGIC;
    A_10_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_10_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_10_we1 : OUT STD_LOGIC;
    A_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_11_ce0 : OUT STD_LOGIC;
    A_11_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_11_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_11_we0 : OUT STD_LOGIC;
    A_11_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_11_ce1 : OUT STD_LOGIC;
    A_11_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_11_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_11_we1 : OUT STD_LOGIC;
    A_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_12_ce0 : OUT STD_LOGIC;
    A_12_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_12_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_12_we0 : OUT STD_LOGIC;
    A_12_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_12_ce1 : OUT STD_LOGIC;
    A_12_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_12_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_12_we1 : OUT STD_LOGIC;
    A_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_13_ce0 : OUT STD_LOGIC;
    A_13_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_13_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_13_we0 : OUT STD_LOGIC;
    A_13_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_13_ce1 : OUT STD_LOGIC;
    A_13_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_13_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_13_we1 : OUT STD_LOGIC;
    A_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_14_ce0 : OUT STD_LOGIC;
    A_14_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_14_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_14_we0 : OUT STD_LOGIC;
    A_14_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_14_ce1 : OUT STD_LOGIC;
    A_14_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_14_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_14_we1 : OUT STD_LOGIC;
    A_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_15_ce0 : OUT STD_LOGIC;
    A_15_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_15_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_15_we0 : OUT STD_LOGIC;
    A_15_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_15_ce1 : OUT STD_LOGIC;
    A_15_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_15_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_15_we1 : OUT STD_LOGIC;
    A_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_16_ce0 : OUT STD_LOGIC;
    A_16_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_16_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_16_we0 : OUT STD_LOGIC;
    A_16_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_16_ce1 : OUT STD_LOGIC;
    A_16_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_16_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_16_we1 : OUT STD_LOGIC;
    A_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_17_ce0 : OUT STD_LOGIC;
    A_17_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_17_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_17_we0 : OUT STD_LOGIC;
    A_17_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_17_ce1 : OUT STD_LOGIC;
    A_17_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_17_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_17_we1 : OUT STD_LOGIC;
    A_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_18_ce0 : OUT STD_LOGIC;
    A_18_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_18_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_18_we0 : OUT STD_LOGIC;
    A_18_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_18_ce1 : OUT STD_LOGIC;
    A_18_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_18_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_18_we1 : OUT STD_LOGIC;
    A_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_19_ce0 : OUT STD_LOGIC;
    A_19_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_19_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_19_we0 : OUT STD_LOGIC;
    A_19_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_19_ce1 : OUT STD_LOGIC;
    A_19_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_19_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_19_we1 : OUT STD_LOGIC;
    A_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_20_ce0 : OUT STD_LOGIC;
    A_20_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_20_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_20_we0 : OUT STD_LOGIC;
    A_20_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_20_ce1 : OUT STD_LOGIC;
    A_20_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_20_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_20_we1 : OUT STD_LOGIC;
    A_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_21_ce0 : OUT STD_LOGIC;
    A_21_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_21_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_21_we0 : OUT STD_LOGIC;
    A_21_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_21_ce1 : OUT STD_LOGIC;
    A_21_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_21_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_21_we1 : OUT STD_LOGIC;
    A_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_22_ce0 : OUT STD_LOGIC;
    A_22_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_22_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_22_we0 : OUT STD_LOGIC;
    A_22_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_22_ce1 : OUT STD_LOGIC;
    A_22_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_22_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_22_we1 : OUT STD_LOGIC;
    A_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_23_ce0 : OUT STD_LOGIC;
    A_23_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_23_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_23_we0 : OUT STD_LOGIC;
    A_23_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_23_ce1 : OUT STD_LOGIC;
    A_23_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_23_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_23_we1 : OUT STD_LOGIC;
    A_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_24_ce0 : OUT STD_LOGIC;
    A_24_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_24_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_24_we0 : OUT STD_LOGIC;
    A_24_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_24_ce1 : OUT STD_LOGIC;
    A_24_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_24_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_24_we1 : OUT STD_LOGIC;
    A_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_25_ce0 : OUT STD_LOGIC;
    A_25_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_25_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_25_we0 : OUT STD_LOGIC;
    A_25_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_25_ce1 : OUT STD_LOGIC;
    A_25_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_25_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_25_we1 : OUT STD_LOGIC;
    A_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_26_ce0 : OUT STD_LOGIC;
    A_26_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_26_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_26_we0 : OUT STD_LOGIC;
    A_26_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_26_ce1 : OUT STD_LOGIC;
    A_26_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_26_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_26_we1 : OUT STD_LOGIC;
    A_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_27_ce0 : OUT STD_LOGIC;
    A_27_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_27_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_27_we0 : OUT STD_LOGIC;
    A_27_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_27_ce1 : OUT STD_LOGIC;
    A_27_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_27_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_27_we1 : OUT STD_LOGIC;
    A_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_28_ce0 : OUT STD_LOGIC;
    A_28_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_28_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_28_we0 : OUT STD_LOGIC;
    A_28_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_28_ce1 : OUT STD_LOGIC;
    A_28_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_28_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_28_we1 : OUT STD_LOGIC;
    A_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_29_ce0 : OUT STD_LOGIC;
    A_29_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_29_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_29_we0 : OUT STD_LOGIC;
    A_29_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_29_ce1 : OUT STD_LOGIC;
    A_29_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_29_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_29_we1 : OUT STD_LOGIC;
    A_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_30_ce0 : OUT STD_LOGIC;
    A_30_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_30_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_30_we0 : OUT STD_LOGIC;
    A_30_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_30_ce1 : OUT STD_LOGIC;
    A_30_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_30_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_30_we1 : OUT STD_LOGIC;
    A_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_31_ce0 : OUT STD_LOGIC;
    A_31_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_31_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_31_we0 : OUT STD_LOGIC;
    A_31_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    A_31_ce1 : OUT STD_LOGIC;
    A_31_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    A_31_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    A_31_we1 : OUT STD_LOGIC;
    B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_0_we0 : OUT STD_LOGIC;
    B_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_0_ce1 : OUT STD_LOGIC;
    B_0_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_0_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_0_we1 : OUT STD_LOGIC;
    B_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_1_we0 : OUT STD_LOGIC;
    B_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_1_ce1 : OUT STD_LOGIC;
    B_1_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_1_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_1_we1 : OUT STD_LOGIC;
    B_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_2_ce0 : OUT STD_LOGIC;
    B_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_2_we0 : OUT STD_LOGIC;
    B_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_2_ce1 : OUT STD_LOGIC;
    B_2_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_2_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_2_we1 : OUT STD_LOGIC;
    B_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_3_ce0 : OUT STD_LOGIC;
    B_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_3_we0 : OUT STD_LOGIC;
    B_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_3_ce1 : OUT STD_LOGIC;
    B_3_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_3_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_3_we1 : OUT STD_LOGIC;
    B_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_4_ce0 : OUT STD_LOGIC;
    B_4_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_4_we0 : OUT STD_LOGIC;
    B_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_4_ce1 : OUT STD_LOGIC;
    B_4_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_4_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_4_we1 : OUT STD_LOGIC;
    B_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_5_ce0 : OUT STD_LOGIC;
    B_5_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_5_we0 : OUT STD_LOGIC;
    B_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_5_ce1 : OUT STD_LOGIC;
    B_5_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_5_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_5_we1 : OUT STD_LOGIC;
    B_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_6_ce0 : OUT STD_LOGIC;
    B_6_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_6_we0 : OUT STD_LOGIC;
    B_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_6_ce1 : OUT STD_LOGIC;
    B_6_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_6_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_6_we1 : OUT STD_LOGIC;
    B_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_7_ce0 : OUT STD_LOGIC;
    B_7_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_7_we0 : OUT STD_LOGIC;
    B_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_7_ce1 : OUT STD_LOGIC;
    B_7_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_7_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_7_we1 : OUT STD_LOGIC;
    B_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_8_ce0 : OUT STD_LOGIC;
    B_8_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_8_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_8_we0 : OUT STD_LOGIC;
    B_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_8_ce1 : OUT STD_LOGIC;
    B_8_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_8_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_8_we1 : OUT STD_LOGIC;
    B_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_9_ce0 : OUT STD_LOGIC;
    B_9_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_9_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_9_we0 : OUT STD_LOGIC;
    B_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_9_ce1 : OUT STD_LOGIC;
    B_9_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_9_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_9_we1 : OUT STD_LOGIC;
    B_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_10_ce0 : OUT STD_LOGIC;
    B_10_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_10_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_10_we0 : OUT STD_LOGIC;
    B_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_10_ce1 : OUT STD_LOGIC;
    B_10_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_10_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_10_we1 : OUT STD_LOGIC;
    B_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_11_ce0 : OUT STD_LOGIC;
    B_11_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_11_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_11_we0 : OUT STD_LOGIC;
    B_11_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_11_ce1 : OUT STD_LOGIC;
    B_11_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_11_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_11_we1 : OUT STD_LOGIC;
    B_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_12_ce0 : OUT STD_LOGIC;
    B_12_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_12_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_12_we0 : OUT STD_LOGIC;
    B_12_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_12_ce1 : OUT STD_LOGIC;
    B_12_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_12_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_12_we1 : OUT STD_LOGIC;
    B_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_13_ce0 : OUT STD_LOGIC;
    B_13_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_13_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_13_we0 : OUT STD_LOGIC;
    B_13_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_13_ce1 : OUT STD_LOGIC;
    B_13_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_13_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_13_we1 : OUT STD_LOGIC;
    B_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_14_ce0 : OUT STD_LOGIC;
    B_14_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_14_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_14_we0 : OUT STD_LOGIC;
    B_14_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_14_ce1 : OUT STD_LOGIC;
    B_14_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_14_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_14_we1 : OUT STD_LOGIC;
    B_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_15_ce0 : OUT STD_LOGIC;
    B_15_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_15_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_15_we0 : OUT STD_LOGIC;
    B_15_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_15_ce1 : OUT STD_LOGIC;
    B_15_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_15_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_15_we1 : OUT STD_LOGIC;
    B_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_16_ce0 : OUT STD_LOGIC;
    B_16_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_16_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_16_we0 : OUT STD_LOGIC;
    B_16_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_16_ce1 : OUT STD_LOGIC;
    B_16_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_16_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_16_we1 : OUT STD_LOGIC;
    B_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_17_ce0 : OUT STD_LOGIC;
    B_17_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_17_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_17_we0 : OUT STD_LOGIC;
    B_17_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_17_ce1 : OUT STD_LOGIC;
    B_17_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_17_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_17_we1 : OUT STD_LOGIC;
    B_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_18_ce0 : OUT STD_LOGIC;
    B_18_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_18_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_18_we0 : OUT STD_LOGIC;
    B_18_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_18_ce1 : OUT STD_LOGIC;
    B_18_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_18_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_18_we1 : OUT STD_LOGIC;
    B_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_19_ce0 : OUT STD_LOGIC;
    B_19_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_19_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_19_we0 : OUT STD_LOGIC;
    B_19_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_19_ce1 : OUT STD_LOGIC;
    B_19_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_19_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_19_we1 : OUT STD_LOGIC;
    B_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_20_ce0 : OUT STD_LOGIC;
    B_20_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_20_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_20_we0 : OUT STD_LOGIC;
    B_20_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_20_ce1 : OUT STD_LOGIC;
    B_20_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_20_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_20_we1 : OUT STD_LOGIC;
    B_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_21_ce0 : OUT STD_LOGIC;
    B_21_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_21_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_21_we0 : OUT STD_LOGIC;
    B_21_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_21_ce1 : OUT STD_LOGIC;
    B_21_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_21_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_21_we1 : OUT STD_LOGIC;
    B_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_22_ce0 : OUT STD_LOGIC;
    B_22_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_22_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_22_we0 : OUT STD_LOGIC;
    B_22_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_22_ce1 : OUT STD_LOGIC;
    B_22_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_22_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_22_we1 : OUT STD_LOGIC;
    B_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_23_ce0 : OUT STD_LOGIC;
    B_23_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_23_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_23_we0 : OUT STD_LOGIC;
    B_23_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_23_ce1 : OUT STD_LOGIC;
    B_23_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_23_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_23_we1 : OUT STD_LOGIC;
    B_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_24_ce0 : OUT STD_LOGIC;
    B_24_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_24_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_24_we0 : OUT STD_LOGIC;
    B_24_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_24_ce1 : OUT STD_LOGIC;
    B_24_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_24_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_24_we1 : OUT STD_LOGIC;
    B_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_25_ce0 : OUT STD_LOGIC;
    B_25_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_25_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_25_we0 : OUT STD_LOGIC;
    B_25_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_25_ce1 : OUT STD_LOGIC;
    B_25_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_25_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_25_we1 : OUT STD_LOGIC;
    B_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_26_ce0 : OUT STD_LOGIC;
    B_26_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_26_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_26_we0 : OUT STD_LOGIC;
    B_26_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_26_ce1 : OUT STD_LOGIC;
    B_26_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_26_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_26_we1 : OUT STD_LOGIC;
    B_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_27_ce0 : OUT STD_LOGIC;
    B_27_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_27_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_27_we0 : OUT STD_LOGIC;
    B_27_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_27_ce1 : OUT STD_LOGIC;
    B_27_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_27_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_27_we1 : OUT STD_LOGIC;
    B_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_28_ce0 : OUT STD_LOGIC;
    B_28_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_28_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_28_we0 : OUT STD_LOGIC;
    B_28_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_28_ce1 : OUT STD_LOGIC;
    B_28_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_28_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_28_we1 : OUT STD_LOGIC;
    B_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_29_ce0 : OUT STD_LOGIC;
    B_29_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_29_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_29_we0 : OUT STD_LOGIC;
    B_29_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_29_ce1 : OUT STD_LOGIC;
    B_29_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_29_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_29_we1 : OUT STD_LOGIC;
    B_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_30_ce0 : OUT STD_LOGIC;
    B_30_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_30_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_30_we0 : OUT STD_LOGIC;
    B_30_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_30_ce1 : OUT STD_LOGIC;
    B_30_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_30_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_30_we1 : OUT STD_LOGIC;
    B_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_31_ce0 : OUT STD_LOGIC;
    B_31_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_31_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_31_we0 : OUT STD_LOGIC;
    B_31_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_31_ce1 : OUT STD_LOGIC;
    B_31_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    B_31_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    B_31_we1 : OUT STD_LOGIC;
    feature_vector_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    feature_vector_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    feature_vector_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    feature_vector_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    feature_vector_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    feature_vector_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    feature_vector_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    feature_vector_TVALID : IN STD_LOGIC;
    feature_vector_TREADY : OUT STD_LOGIC );
end;


architecture behav of matrix_matrix_mult_streaming is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrix_matrix_mult_streaming_matrix_matrix_mult_streaming,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.976938,HLS_SYN_LAT=350,HLS_SYN_TPT=335,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=13652,HLS_SYN_LUT=18710,HLS_VERSION=2020_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_ap_start : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_ap_done : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_ap_continue : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_ap_idle : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_ap_ready : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_0_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_1_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_2_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_3_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_4_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_5_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_6_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_7_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_8_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_9_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_10_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_11_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_12_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_13_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_14_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_15_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_16_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_17_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_18_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_19_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_20_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_21_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_22_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_23_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_24_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_25_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_26_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_27_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_28_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_29_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_30_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_A_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal compute_weights_with_matrix_mult_U0_A_31_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_0_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_1_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_2_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_3_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_4_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_5_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_6_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_7_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_8_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_9_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_10_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_11_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_12_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_13_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_14_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_15_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_16_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_17_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_18_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_18_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_19_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_19_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_20_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_20_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_21_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_21_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_22_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_22_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_23_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_23_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_24_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_24_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_25_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_25_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_26_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_26_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_27_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_27_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_28_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_28_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_29_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_29_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_30_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_B_31_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_B_31_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_0_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_0_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_0_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_1_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_1_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_1_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_2_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_2_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_2_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_3_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_3_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_3_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_4_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_4_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_4_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_5_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_5_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_5_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_6_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_6_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_6_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_7_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_7_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_7_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_8_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_8_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_8_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_9_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_9_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_9_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_10_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_10_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_10_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_11_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_11_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_11_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_12_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_12_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_12_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_13_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_13_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_13_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_14_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_14_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_14_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_15_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_15_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_15_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_16_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_16_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_16_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_17_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_17_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_17_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_18_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_18_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_18_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_18_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_19_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_19_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_19_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_19_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_20_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_20_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_20_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_20_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_21_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_21_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_21_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_21_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_22_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_22_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_22_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_22_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_23_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_23_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_23_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_23_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_24_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_24_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_24_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_24_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_25_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_25_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_25_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_25_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_26_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_26_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_26_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_26_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_27_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_27_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_27_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_27_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_28_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_28_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_28_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_28_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_29_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_29_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_29_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_29_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_30_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_30_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_30_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_31_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_weights_with_matrix_mult_U0_W_V_31_ce0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_31_we0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_31_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_channel_done_W_V_31 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_31_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_31 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_31 : STD_LOGIC;
    signal ap_channel_done_W_V_30 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_30_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_30 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_30 : STD_LOGIC;
    signal ap_channel_done_W_V_29 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_29_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_29 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_29 : STD_LOGIC;
    signal ap_channel_done_W_V_28 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_28_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_28 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_28 : STD_LOGIC;
    signal ap_channel_done_W_V_27 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_27_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_27 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_27 : STD_LOGIC;
    signal ap_channel_done_W_V_26 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_26_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_26 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_26 : STD_LOGIC;
    signal ap_channel_done_W_V_25 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_25_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_25 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_25 : STD_LOGIC;
    signal ap_channel_done_W_V_24 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_24_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_24 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_24 : STD_LOGIC;
    signal ap_channel_done_W_V_23 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_23_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_23 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_23 : STD_LOGIC;
    signal ap_channel_done_W_V_22 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_22 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_22 : STD_LOGIC;
    signal ap_channel_done_W_V_21 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_21_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_21 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_21 : STD_LOGIC;
    signal ap_channel_done_W_V_20 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_20_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_20 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_20 : STD_LOGIC;
    signal ap_channel_done_W_V_19 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_19 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_19 : STD_LOGIC;
    signal ap_channel_done_W_V_18 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_18 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_18 : STD_LOGIC;
    signal ap_channel_done_W_V_17 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_17 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_17 : STD_LOGIC;
    signal ap_channel_done_W_V_16 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_16 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_16 : STD_LOGIC;
    signal ap_channel_done_W_V_15 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_15 : STD_LOGIC;
    signal ap_channel_done_W_V_14 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_14 : STD_LOGIC;
    signal ap_channel_done_W_V_13 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_13 : STD_LOGIC;
    signal ap_channel_done_W_V_12 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_12 : STD_LOGIC;
    signal ap_channel_done_W_V_11 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_11 : STD_LOGIC;
    signal ap_channel_done_W_V_10 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_10 : STD_LOGIC;
    signal ap_channel_done_W_V_9 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_9 : STD_LOGIC;
    signal ap_channel_done_W_V_8 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_8 : STD_LOGIC;
    signal ap_channel_done_W_V_7 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_7 : STD_LOGIC;
    signal ap_channel_done_W_V_6 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_6 : STD_LOGIC;
    signal ap_channel_done_W_V_5 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_5 : STD_LOGIC;
    signal ap_channel_done_W_V_4 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_4 : STD_LOGIC;
    signal ap_channel_done_W_V_3 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_3 : STD_LOGIC;
    signal ap_channel_done_W_V_2 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_2 : STD_LOGIC;
    signal ap_channel_done_W_V_1 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_1 : STD_LOGIC;
    signal ap_channel_done_W_V_0 : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_W_V_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_W_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_W_V_0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_ap_start : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_ap_done : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_ap_continue : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_ap_idle : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_ap_ready : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_0_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_1_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_2_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_3_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_4_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_5_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_6_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_7_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_8_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_8_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_9_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_9_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_10_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_10_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_11_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_11_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_12_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_12_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_13_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_13_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_14_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_14_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_15_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_15_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_16_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_16_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_17_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_17_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_18_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_18_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_19_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_19_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_20_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_20_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_21_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_21_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_22_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_22_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_23_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_23_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_24_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_24_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_25_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_25_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_26_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_26_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_27_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_27_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_28_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_28_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_29_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_29_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_30_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_30_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_B_31_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_B_31_ce1 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_0_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_1_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_10_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_11_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_12_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_13_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_14_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_15_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_16_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_17_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_18_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_18_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_19_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_19_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_2_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_20_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_20_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_21_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_21_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_22_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_22_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_23_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_23_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_24_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_24_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_25_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_25_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_26_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_26_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_27_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_27_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_28_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_28_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_29_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_29_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_3_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_30_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_31_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_31_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_4_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_5_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_6_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_7_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_8_ce0 : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_W_V_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal compute_biases_with_multiple_dot_products_U0_W_V_9_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal compute_scores_U0_ap_start : STD_LOGIC;
    signal compute_scores_U0_ap_done : STD_LOGIC;
    signal compute_scores_U0_ap_continue : STD_LOGIC;
    signal compute_scores_U0_ap_idle : STD_LOGIC;
    signal compute_scores_U0_ap_ready : STD_LOGIC;
    signal compute_scores_U0_feature_vector_TREADY : STD_LOGIC;
    signal W_V_0_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_0_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_0_i_full_n : STD_LOGIC;
    signal W_V_0_t_empty_n : STD_LOGIC;
    signal W_V_1_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_1_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_1_i_full_n : STD_LOGIC;
    signal W_V_1_t_empty_n : STD_LOGIC;
    signal W_V_2_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_2_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_2_i_full_n : STD_LOGIC;
    signal W_V_2_t_empty_n : STD_LOGIC;
    signal W_V_3_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_3_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_3_i_full_n : STD_LOGIC;
    signal W_V_3_t_empty_n : STD_LOGIC;
    signal W_V_4_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_4_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_4_i_full_n : STD_LOGIC;
    signal W_V_4_t_empty_n : STD_LOGIC;
    signal W_V_5_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_5_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_5_i_full_n : STD_LOGIC;
    signal W_V_5_t_empty_n : STD_LOGIC;
    signal W_V_6_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_6_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_6_i_full_n : STD_LOGIC;
    signal W_V_6_t_empty_n : STD_LOGIC;
    signal W_V_7_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_7_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_7_i_full_n : STD_LOGIC;
    signal W_V_7_t_empty_n : STD_LOGIC;
    signal W_V_8_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_8_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_8_i_full_n : STD_LOGIC;
    signal W_V_8_t_empty_n : STD_LOGIC;
    signal W_V_9_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_9_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_9_i_full_n : STD_LOGIC;
    signal W_V_9_t_empty_n : STD_LOGIC;
    signal W_V_10_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_10_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_10_i_full_n : STD_LOGIC;
    signal W_V_10_t_empty_n : STD_LOGIC;
    signal W_V_11_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_11_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_11_i_full_n : STD_LOGIC;
    signal W_V_11_t_empty_n : STD_LOGIC;
    signal W_V_12_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_12_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_12_i_full_n : STD_LOGIC;
    signal W_V_12_t_empty_n : STD_LOGIC;
    signal W_V_13_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_13_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_13_i_full_n : STD_LOGIC;
    signal W_V_13_t_empty_n : STD_LOGIC;
    signal W_V_14_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_14_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_14_i_full_n : STD_LOGIC;
    signal W_V_14_t_empty_n : STD_LOGIC;
    signal W_V_15_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_15_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_15_i_full_n : STD_LOGIC;
    signal W_V_15_t_empty_n : STD_LOGIC;
    signal W_V_16_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_16_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_16_i_full_n : STD_LOGIC;
    signal W_V_16_t_empty_n : STD_LOGIC;
    signal W_V_17_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_17_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_17_i_full_n : STD_LOGIC;
    signal W_V_17_t_empty_n : STD_LOGIC;
    signal W_V_18_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_18_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_18_i_full_n : STD_LOGIC;
    signal W_V_18_t_empty_n : STD_LOGIC;
    signal W_V_19_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_19_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_19_i_full_n : STD_LOGIC;
    signal W_V_19_t_empty_n : STD_LOGIC;
    signal W_V_20_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_20_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_20_i_full_n : STD_LOGIC;
    signal W_V_20_t_empty_n : STD_LOGIC;
    signal W_V_21_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_21_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_21_i_full_n : STD_LOGIC;
    signal W_V_21_t_empty_n : STD_LOGIC;
    signal W_V_22_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_22_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_22_i_full_n : STD_LOGIC;
    signal W_V_22_t_empty_n : STD_LOGIC;
    signal W_V_23_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_23_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_23_i_full_n : STD_LOGIC;
    signal W_V_23_t_empty_n : STD_LOGIC;
    signal W_V_24_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_24_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_24_i_full_n : STD_LOGIC;
    signal W_V_24_t_empty_n : STD_LOGIC;
    signal W_V_25_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_25_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_25_i_full_n : STD_LOGIC;
    signal W_V_25_t_empty_n : STD_LOGIC;
    signal W_V_26_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_26_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_26_i_full_n : STD_LOGIC;
    signal W_V_26_t_empty_n : STD_LOGIC;
    signal W_V_27_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_27_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_27_i_full_n : STD_LOGIC;
    signal W_V_27_t_empty_n : STD_LOGIC;
    signal W_V_28_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_28_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_28_i_full_n : STD_LOGIC;
    signal W_V_28_t_empty_n : STD_LOGIC;
    signal W_V_29_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_29_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_29_i_full_n : STD_LOGIC;
    signal W_V_29_t_empty_n : STD_LOGIC;
    signal W_V_30_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_30_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_30_i_full_n : STD_LOGIC;
    signal W_V_30_t_empty_n : STD_LOGIC;
    signal W_V_31_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_31_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal W_V_31_i_full_n : STD_LOGIC;
    signal W_V_31_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_compute_weights_with_matrix_mult_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_compute_biases_with_multiple_dot_products_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_compute_scores_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_compute_scores_U0_ap_ready : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_start_full_n : STD_LOGIC;
    signal compute_weights_with_matrix_mult_U0_start_write : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_start_full_n : STD_LOGIC;
    signal compute_biases_with_multiple_dot_products_U0_start_write : STD_LOGIC;
    signal compute_scores_U0_start_full_n : STD_LOGIC;
    signal compute_scores_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component matrix_matrix_mult_streaming_compute_weights_with_matrix_mult IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_4_ce0 : OUT STD_LOGIC;
        A_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_5_ce0 : OUT STD_LOGIC;
        A_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_6_ce0 : OUT STD_LOGIC;
        A_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_7_ce0 : OUT STD_LOGIC;
        A_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_8_ce0 : OUT STD_LOGIC;
        A_8_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_9_ce0 : OUT STD_LOGIC;
        A_9_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_10_ce0 : OUT STD_LOGIC;
        A_10_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_11_ce0 : OUT STD_LOGIC;
        A_11_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_12_ce0 : OUT STD_LOGIC;
        A_12_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_13_ce0 : OUT STD_LOGIC;
        A_13_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_14_ce0 : OUT STD_LOGIC;
        A_14_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_15_ce0 : OUT STD_LOGIC;
        A_15_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_16_ce0 : OUT STD_LOGIC;
        A_16_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_17_ce0 : OUT STD_LOGIC;
        A_17_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_18_ce0 : OUT STD_LOGIC;
        A_18_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_19_ce0 : OUT STD_LOGIC;
        A_19_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_20_ce0 : OUT STD_LOGIC;
        A_20_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_21_ce0 : OUT STD_LOGIC;
        A_21_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_22_ce0 : OUT STD_LOGIC;
        A_22_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_23_ce0 : OUT STD_LOGIC;
        A_23_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_24_ce0 : OUT STD_LOGIC;
        A_24_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_25_ce0 : OUT STD_LOGIC;
        A_25_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_26_ce0 : OUT STD_LOGIC;
        A_26_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_27_ce0 : OUT STD_LOGIC;
        A_27_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_28_ce0 : OUT STD_LOGIC;
        A_28_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_29_ce0 : OUT STD_LOGIC;
        A_29_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_30_ce0 : OUT STD_LOGIC;
        A_30_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        A_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_31_ce0 : OUT STD_LOGIC;
        A_31_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_4_ce0 : OUT STD_LOGIC;
        B_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_5_ce0 : OUT STD_LOGIC;
        B_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_6_ce0 : OUT STD_LOGIC;
        B_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_7_ce0 : OUT STD_LOGIC;
        B_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_8_ce0 : OUT STD_LOGIC;
        B_8_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_9_ce0 : OUT STD_LOGIC;
        B_9_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_10_ce0 : OUT STD_LOGIC;
        B_10_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_11_ce0 : OUT STD_LOGIC;
        B_11_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_12_ce0 : OUT STD_LOGIC;
        B_12_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_13_ce0 : OUT STD_LOGIC;
        B_13_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_14_ce0 : OUT STD_LOGIC;
        B_14_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_15_ce0 : OUT STD_LOGIC;
        B_15_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_16_ce0 : OUT STD_LOGIC;
        B_16_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_17_ce0 : OUT STD_LOGIC;
        B_17_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_18_ce0 : OUT STD_LOGIC;
        B_18_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_19_ce0 : OUT STD_LOGIC;
        B_19_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_20_ce0 : OUT STD_LOGIC;
        B_20_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_21_ce0 : OUT STD_LOGIC;
        B_21_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_22_ce0 : OUT STD_LOGIC;
        B_22_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_23_ce0 : OUT STD_LOGIC;
        B_23_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_24_ce0 : OUT STD_LOGIC;
        B_24_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_25_ce0 : OUT STD_LOGIC;
        B_25_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_26_ce0 : OUT STD_LOGIC;
        B_26_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_27_ce0 : OUT STD_LOGIC;
        B_27_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_28_ce0 : OUT STD_LOGIC;
        B_28_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_29_ce0 : OUT STD_LOGIC;
        B_29_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_30_ce0 : OUT STD_LOGIC;
        B_30_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_31_ce0 : OUT STD_LOGIC;
        B_31_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        W_V_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_0_ce0 : OUT STD_LOGIC;
        W_V_0_we0 : OUT STD_LOGIC;
        W_V_0_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_1_ce0 : OUT STD_LOGIC;
        W_V_1_we0 : OUT STD_LOGIC;
        W_V_1_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_2_ce0 : OUT STD_LOGIC;
        W_V_2_we0 : OUT STD_LOGIC;
        W_V_2_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_3_ce0 : OUT STD_LOGIC;
        W_V_3_we0 : OUT STD_LOGIC;
        W_V_3_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_4_ce0 : OUT STD_LOGIC;
        W_V_4_we0 : OUT STD_LOGIC;
        W_V_4_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_5_ce0 : OUT STD_LOGIC;
        W_V_5_we0 : OUT STD_LOGIC;
        W_V_5_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_6_ce0 : OUT STD_LOGIC;
        W_V_6_we0 : OUT STD_LOGIC;
        W_V_6_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_7_ce0 : OUT STD_LOGIC;
        W_V_7_we0 : OUT STD_LOGIC;
        W_V_7_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_8_ce0 : OUT STD_LOGIC;
        W_V_8_we0 : OUT STD_LOGIC;
        W_V_8_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_9_ce0 : OUT STD_LOGIC;
        W_V_9_we0 : OUT STD_LOGIC;
        W_V_9_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_10_ce0 : OUT STD_LOGIC;
        W_V_10_we0 : OUT STD_LOGIC;
        W_V_10_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_11_ce0 : OUT STD_LOGIC;
        W_V_11_we0 : OUT STD_LOGIC;
        W_V_11_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_12_ce0 : OUT STD_LOGIC;
        W_V_12_we0 : OUT STD_LOGIC;
        W_V_12_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_13_ce0 : OUT STD_LOGIC;
        W_V_13_we0 : OUT STD_LOGIC;
        W_V_13_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_14_ce0 : OUT STD_LOGIC;
        W_V_14_we0 : OUT STD_LOGIC;
        W_V_14_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_15_ce0 : OUT STD_LOGIC;
        W_V_15_we0 : OUT STD_LOGIC;
        W_V_15_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_16_ce0 : OUT STD_LOGIC;
        W_V_16_we0 : OUT STD_LOGIC;
        W_V_16_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_17_ce0 : OUT STD_LOGIC;
        W_V_17_we0 : OUT STD_LOGIC;
        W_V_17_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_18_ce0 : OUT STD_LOGIC;
        W_V_18_we0 : OUT STD_LOGIC;
        W_V_18_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_19_ce0 : OUT STD_LOGIC;
        W_V_19_we0 : OUT STD_LOGIC;
        W_V_19_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_20_ce0 : OUT STD_LOGIC;
        W_V_20_we0 : OUT STD_LOGIC;
        W_V_20_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_21_ce0 : OUT STD_LOGIC;
        W_V_21_we0 : OUT STD_LOGIC;
        W_V_21_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_22_ce0 : OUT STD_LOGIC;
        W_V_22_we0 : OUT STD_LOGIC;
        W_V_22_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_23_ce0 : OUT STD_LOGIC;
        W_V_23_we0 : OUT STD_LOGIC;
        W_V_23_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_24_ce0 : OUT STD_LOGIC;
        W_V_24_we0 : OUT STD_LOGIC;
        W_V_24_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_25_ce0 : OUT STD_LOGIC;
        W_V_25_we0 : OUT STD_LOGIC;
        W_V_25_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_26_ce0 : OUT STD_LOGIC;
        W_V_26_we0 : OUT STD_LOGIC;
        W_V_26_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_27_ce0 : OUT STD_LOGIC;
        W_V_27_we0 : OUT STD_LOGIC;
        W_V_27_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_28_ce0 : OUT STD_LOGIC;
        W_V_28_we0 : OUT STD_LOGIC;
        W_V_28_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_29_ce0 : OUT STD_LOGIC;
        W_V_29_we0 : OUT STD_LOGIC;
        W_V_29_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_30_ce0 : OUT STD_LOGIC;
        W_V_30_we0 : OUT STD_LOGIC;
        W_V_30_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        W_V_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_31_ce0 : OUT STD_LOGIC;
        W_V_31_we0 : OUT STD_LOGIC;
        W_V_31_d0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component matrix_matrix_mult_streaming_compute_biases_with_multiple_dot_products IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_0_ce1 : OUT STD_LOGIC;
        B_0_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_1_ce1 : OUT STD_LOGIC;
        B_1_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_2_ce1 : OUT STD_LOGIC;
        B_2_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_3_ce1 : OUT STD_LOGIC;
        B_3_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_4_ce1 : OUT STD_LOGIC;
        B_4_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_5_ce1 : OUT STD_LOGIC;
        B_5_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_6_ce1 : OUT STD_LOGIC;
        B_6_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_7_ce1 : OUT STD_LOGIC;
        B_7_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_8_ce1 : OUT STD_LOGIC;
        B_8_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_9_ce1 : OUT STD_LOGIC;
        B_9_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_10_ce1 : OUT STD_LOGIC;
        B_10_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_11_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_11_ce1 : OUT STD_LOGIC;
        B_11_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_12_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_12_ce1 : OUT STD_LOGIC;
        B_12_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_13_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_13_ce1 : OUT STD_LOGIC;
        B_13_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_14_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_14_ce1 : OUT STD_LOGIC;
        B_14_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_15_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_15_ce1 : OUT STD_LOGIC;
        B_15_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_16_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_16_ce1 : OUT STD_LOGIC;
        B_16_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_17_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_17_ce1 : OUT STD_LOGIC;
        B_17_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_18_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_18_ce1 : OUT STD_LOGIC;
        B_18_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_19_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_19_ce1 : OUT STD_LOGIC;
        B_19_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_20_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_20_ce1 : OUT STD_LOGIC;
        B_20_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_21_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_21_ce1 : OUT STD_LOGIC;
        B_21_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_22_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_22_ce1 : OUT STD_LOGIC;
        B_22_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_23_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_23_ce1 : OUT STD_LOGIC;
        B_23_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_24_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_24_ce1 : OUT STD_LOGIC;
        B_24_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_25_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_25_ce1 : OUT STD_LOGIC;
        B_25_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_26_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_26_ce1 : OUT STD_LOGIC;
        B_26_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_27_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_27_ce1 : OUT STD_LOGIC;
        B_27_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_28_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_28_ce1 : OUT STD_LOGIC;
        B_28_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_29_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_29_ce1 : OUT STD_LOGIC;
        B_29_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_30_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_30_ce1 : OUT STD_LOGIC;
        B_30_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        B_31_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_31_ce1 : OUT STD_LOGIC;
        B_31_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        W_V_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_0_ce0 : OUT STD_LOGIC;
        W_V_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_1_ce0 : OUT STD_LOGIC;
        W_V_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_10_ce0 : OUT STD_LOGIC;
        W_V_10_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_11_ce0 : OUT STD_LOGIC;
        W_V_11_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_12_ce0 : OUT STD_LOGIC;
        W_V_12_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_13_ce0 : OUT STD_LOGIC;
        W_V_13_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_14_ce0 : OUT STD_LOGIC;
        W_V_14_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_15_ce0 : OUT STD_LOGIC;
        W_V_15_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_16_ce0 : OUT STD_LOGIC;
        W_V_16_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_17_ce0 : OUT STD_LOGIC;
        W_V_17_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_18_ce0 : OUT STD_LOGIC;
        W_V_18_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_19_ce0 : OUT STD_LOGIC;
        W_V_19_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_2_ce0 : OUT STD_LOGIC;
        W_V_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_20_ce0 : OUT STD_LOGIC;
        W_V_20_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_21_ce0 : OUT STD_LOGIC;
        W_V_21_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_22_ce0 : OUT STD_LOGIC;
        W_V_22_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_23_ce0 : OUT STD_LOGIC;
        W_V_23_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_24_ce0 : OUT STD_LOGIC;
        W_V_24_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_25_ce0 : OUT STD_LOGIC;
        W_V_25_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_26_ce0 : OUT STD_LOGIC;
        W_V_26_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_27_ce0 : OUT STD_LOGIC;
        W_V_27_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_28_ce0 : OUT STD_LOGIC;
        W_V_28_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_29_ce0 : OUT STD_LOGIC;
        W_V_29_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_3_ce0 : OUT STD_LOGIC;
        W_V_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_30_ce0 : OUT STD_LOGIC;
        W_V_30_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_31_ce0 : OUT STD_LOGIC;
        W_V_31_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_4_ce0 : OUT STD_LOGIC;
        W_V_4_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_5_ce0 : OUT STD_LOGIC;
        W_V_5_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_6_ce0 : OUT STD_LOGIC;
        W_V_6_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_7_ce0 : OUT STD_LOGIC;
        W_V_7_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_8_ce0 : OUT STD_LOGIC;
        W_V_8_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        W_V_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_V_9_ce0 : OUT STD_LOGIC;
        W_V_9_q0 : IN STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component matrix_matrix_mult_streaming_compute_scores IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        feature_vector_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        feature_vector_TVALID : IN STD_LOGIC;
        feature_vector_TREADY : OUT STD_LOGIC;
        feature_vector_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        feature_vector_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        feature_vector_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        feature_vector_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        feature_vector_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        feature_vector_TDEST : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component matrix_matrix_mult_streaming_W_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component matrix_matrix_mult_streaming_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    CTRL_BUS_s_axi_U : component matrix_matrix_mult_streaming_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    compute_weights_with_matrix_mult_U0 : component matrix_matrix_mult_streaming_compute_weights_with_matrix_mult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => compute_weights_with_matrix_mult_U0_ap_start,
        ap_done => compute_weights_with_matrix_mult_U0_ap_done,
        ap_continue => compute_weights_with_matrix_mult_U0_ap_continue,
        ap_idle => compute_weights_with_matrix_mult_U0_ap_idle,
        ap_ready => compute_weights_with_matrix_mult_U0_ap_ready,
        A_0_address0 => compute_weights_with_matrix_mult_U0_A_0_address0,
        A_0_ce0 => compute_weights_with_matrix_mult_U0_A_0_ce0,
        A_0_q0 => A_0_q0,
        A_1_address0 => compute_weights_with_matrix_mult_U0_A_1_address0,
        A_1_ce0 => compute_weights_with_matrix_mult_U0_A_1_ce0,
        A_1_q0 => A_1_q0,
        A_2_address0 => compute_weights_with_matrix_mult_U0_A_2_address0,
        A_2_ce0 => compute_weights_with_matrix_mult_U0_A_2_ce0,
        A_2_q0 => A_2_q0,
        A_3_address0 => compute_weights_with_matrix_mult_U0_A_3_address0,
        A_3_ce0 => compute_weights_with_matrix_mult_U0_A_3_ce0,
        A_3_q0 => A_3_q0,
        A_4_address0 => compute_weights_with_matrix_mult_U0_A_4_address0,
        A_4_ce0 => compute_weights_with_matrix_mult_U0_A_4_ce0,
        A_4_q0 => A_4_q0,
        A_5_address0 => compute_weights_with_matrix_mult_U0_A_5_address0,
        A_5_ce0 => compute_weights_with_matrix_mult_U0_A_5_ce0,
        A_5_q0 => A_5_q0,
        A_6_address0 => compute_weights_with_matrix_mult_U0_A_6_address0,
        A_6_ce0 => compute_weights_with_matrix_mult_U0_A_6_ce0,
        A_6_q0 => A_6_q0,
        A_7_address0 => compute_weights_with_matrix_mult_U0_A_7_address0,
        A_7_ce0 => compute_weights_with_matrix_mult_U0_A_7_ce0,
        A_7_q0 => A_7_q0,
        A_8_address0 => compute_weights_with_matrix_mult_U0_A_8_address0,
        A_8_ce0 => compute_weights_with_matrix_mult_U0_A_8_ce0,
        A_8_q0 => A_8_q0,
        A_9_address0 => compute_weights_with_matrix_mult_U0_A_9_address0,
        A_9_ce0 => compute_weights_with_matrix_mult_U0_A_9_ce0,
        A_9_q0 => A_9_q0,
        A_10_address0 => compute_weights_with_matrix_mult_U0_A_10_address0,
        A_10_ce0 => compute_weights_with_matrix_mult_U0_A_10_ce0,
        A_10_q0 => A_10_q0,
        A_11_address0 => compute_weights_with_matrix_mult_U0_A_11_address0,
        A_11_ce0 => compute_weights_with_matrix_mult_U0_A_11_ce0,
        A_11_q0 => A_11_q0,
        A_12_address0 => compute_weights_with_matrix_mult_U0_A_12_address0,
        A_12_ce0 => compute_weights_with_matrix_mult_U0_A_12_ce0,
        A_12_q0 => A_12_q0,
        A_13_address0 => compute_weights_with_matrix_mult_U0_A_13_address0,
        A_13_ce0 => compute_weights_with_matrix_mult_U0_A_13_ce0,
        A_13_q0 => A_13_q0,
        A_14_address0 => compute_weights_with_matrix_mult_U0_A_14_address0,
        A_14_ce0 => compute_weights_with_matrix_mult_U0_A_14_ce0,
        A_14_q0 => A_14_q0,
        A_15_address0 => compute_weights_with_matrix_mult_U0_A_15_address0,
        A_15_ce0 => compute_weights_with_matrix_mult_U0_A_15_ce0,
        A_15_q0 => A_15_q0,
        A_16_address0 => compute_weights_with_matrix_mult_U0_A_16_address0,
        A_16_ce0 => compute_weights_with_matrix_mult_U0_A_16_ce0,
        A_16_q0 => A_16_q0,
        A_17_address0 => compute_weights_with_matrix_mult_U0_A_17_address0,
        A_17_ce0 => compute_weights_with_matrix_mult_U0_A_17_ce0,
        A_17_q0 => A_17_q0,
        A_18_address0 => compute_weights_with_matrix_mult_U0_A_18_address0,
        A_18_ce0 => compute_weights_with_matrix_mult_U0_A_18_ce0,
        A_18_q0 => A_18_q0,
        A_19_address0 => compute_weights_with_matrix_mult_U0_A_19_address0,
        A_19_ce0 => compute_weights_with_matrix_mult_U0_A_19_ce0,
        A_19_q0 => A_19_q0,
        A_20_address0 => compute_weights_with_matrix_mult_U0_A_20_address0,
        A_20_ce0 => compute_weights_with_matrix_mult_U0_A_20_ce0,
        A_20_q0 => A_20_q0,
        A_21_address0 => compute_weights_with_matrix_mult_U0_A_21_address0,
        A_21_ce0 => compute_weights_with_matrix_mult_U0_A_21_ce0,
        A_21_q0 => A_21_q0,
        A_22_address0 => compute_weights_with_matrix_mult_U0_A_22_address0,
        A_22_ce0 => compute_weights_with_matrix_mult_U0_A_22_ce0,
        A_22_q0 => A_22_q0,
        A_23_address0 => compute_weights_with_matrix_mult_U0_A_23_address0,
        A_23_ce0 => compute_weights_with_matrix_mult_U0_A_23_ce0,
        A_23_q0 => A_23_q0,
        A_24_address0 => compute_weights_with_matrix_mult_U0_A_24_address0,
        A_24_ce0 => compute_weights_with_matrix_mult_U0_A_24_ce0,
        A_24_q0 => A_24_q0,
        A_25_address0 => compute_weights_with_matrix_mult_U0_A_25_address0,
        A_25_ce0 => compute_weights_with_matrix_mult_U0_A_25_ce0,
        A_25_q0 => A_25_q0,
        A_26_address0 => compute_weights_with_matrix_mult_U0_A_26_address0,
        A_26_ce0 => compute_weights_with_matrix_mult_U0_A_26_ce0,
        A_26_q0 => A_26_q0,
        A_27_address0 => compute_weights_with_matrix_mult_U0_A_27_address0,
        A_27_ce0 => compute_weights_with_matrix_mult_U0_A_27_ce0,
        A_27_q0 => A_27_q0,
        A_28_address0 => compute_weights_with_matrix_mult_U0_A_28_address0,
        A_28_ce0 => compute_weights_with_matrix_mult_U0_A_28_ce0,
        A_28_q0 => A_28_q0,
        A_29_address0 => compute_weights_with_matrix_mult_U0_A_29_address0,
        A_29_ce0 => compute_weights_with_matrix_mult_U0_A_29_ce0,
        A_29_q0 => A_29_q0,
        A_30_address0 => compute_weights_with_matrix_mult_U0_A_30_address0,
        A_30_ce0 => compute_weights_with_matrix_mult_U0_A_30_ce0,
        A_30_q0 => A_30_q0,
        A_31_address0 => compute_weights_with_matrix_mult_U0_A_31_address0,
        A_31_ce0 => compute_weights_with_matrix_mult_U0_A_31_ce0,
        A_31_q0 => A_31_q0,
        B_0_address0 => compute_weights_with_matrix_mult_U0_B_0_address0,
        B_0_ce0 => compute_weights_with_matrix_mult_U0_B_0_ce0,
        B_0_q0 => B_0_q0,
        B_1_address0 => compute_weights_with_matrix_mult_U0_B_1_address0,
        B_1_ce0 => compute_weights_with_matrix_mult_U0_B_1_ce0,
        B_1_q0 => B_1_q0,
        B_2_address0 => compute_weights_with_matrix_mult_U0_B_2_address0,
        B_2_ce0 => compute_weights_with_matrix_mult_U0_B_2_ce0,
        B_2_q0 => B_2_q0,
        B_3_address0 => compute_weights_with_matrix_mult_U0_B_3_address0,
        B_3_ce0 => compute_weights_with_matrix_mult_U0_B_3_ce0,
        B_3_q0 => B_3_q0,
        B_4_address0 => compute_weights_with_matrix_mult_U0_B_4_address0,
        B_4_ce0 => compute_weights_with_matrix_mult_U0_B_4_ce0,
        B_4_q0 => B_4_q0,
        B_5_address0 => compute_weights_with_matrix_mult_U0_B_5_address0,
        B_5_ce0 => compute_weights_with_matrix_mult_U0_B_5_ce0,
        B_5_q0 => B_5_q0,
        B_6_address0 => compute_weights_with_matrix_mult_U0_B_6_address0,
        B_6_ce0 => compute_weights_with_matrix_mult_U0_B_6_ce0,
        B_6_q0 => B_6_q0,
        B_7_address0 => compute_weights_with_matrix_mult_U0_B_7_address0,
        B_7_ce0 => compute_weights_with_matrix_mult_U0_B_7_ce0,
        B_7_q0 => B_7_q0,
        B_8_address0 => compute_weights_with_matrix_mult_U0_B_8_address0,
        B_8_ce0 => compute_weights_with_matrix_mult_U0_B_8_ce0,
        B_8_q0 => B_8_q0,
        B_9_address0 => compute_weights_with_matrix_mult_U0_B_9_address0,
        B_9_ce0 => compute_weights_with_matrix_mult_U0_B_9_ce0,
        B_9_q0 => B_9_q0,
        B_10_address0 => compute_weights_with_matrix_mult_U0_B_10_address0,
        B_10_ce0 => compute_weights_with_matrix_mult_U0_B_10_ce0,
        B_10_q0 => B_10_q0,
        B_11_address0 => compute_weights_with_matrix_mult_U0_B_11_address0,
        B_11_ce0 => compute_weights_with_matrix_mult_U0_B_11_ce0,
        B_11_q0 => B_11_q0,
        B_12_address0 => compute_weights_with_matrix_mult_U0_B_12_address0,
        B_12_ce0 => compute_weights_with_matrix_mult_U0_B_12_ce0,
        B_12_q0 => B_12_q0,
        B_13_address0 => compute_weights_with_matrix_mult_U0_B_13_address0,
        B_13_ce0 => compute_weights_with_matrix_mult_U0_B_13_ce0,
        B_13_q0 => B_13_q0,
        B_14_address0 => compute_weights_with_matrix_mult_U0_B_14_address0,
        B_14_ce0 => compute_weights_with_matrix_mult_U0_B_14_ce0,
        B_14_q0 => B_14_q0,
        B_15_address0 => compute_weights_with_matrix_mult_U0_B_15_address0,
        B_15_ce0 => compute_weights_with_matrix_mult_U0_B_15_ce0,
        B_15_q0 => B_15_q0,
        B_16_address0 => compute_weights_with_matrix_mult_U0_B_16_address0,
        B_16_ce0 => compute_weights_with_matrix_mult_U0_B_16_ce0,
        B_16_q0 => B_16_q0,
        B_17_address0 => compute_weights_with_matrix_mult_U0_B_17_address0,
        B_17_ce0 => compute_weights_with_matrix_mult_U0_B_17_ce0,
        B_17_q0 => B_17_q0,
        B_18_address0 => compute_weights_with_matrix_mult_U0_B_18_address0,
        B_18_ce0 => compute_weights_with_matrix_mult_U0_B_18_ce0,
        B_18_q0 => B_18_q0,
        B_19_address0 => compute_weights_with_matrix_mult_U0_B_19_address0,
        B_19_ce0 => compute_weights_with_matrix_mult_U0_B_19_ce0,
        B_19_q0 => B_19_q0,
        B_20_address0 => compute_weights_with_matrix_mult_U0_B_20_address0,
        B_20_ce0 => compute_weights_with_matrix_mult_U0_B_20_ce0,
        B_20_q0 => B_20_q0,
        B_21_address0 => compute_weights_with_matrix_mult_U0_B_21_address0,
        B_21_ce0 => compute_weights_with_matrix_mult_U0_B_21_ce0,
        B_21_q0 => B_21_q0,
        B_22_address0 => compute_weights_with_matrix_mult_U0_B_22_address0,
        B_22_ce0 => compute_weights_with_matrix_mult_U0_B_22_ce0,
        B_22_q0 => B_22_q0,
        B_23_address0 => compute_weights_with_matrix_mult_U0_B_23_address0,
        B_23_ce0 => compute_weights_with_matrix_mult_U0_B_23_ce0,
        B_23_q0 => B_23_q0,
        B_24_address0 => compute_weights_with_matrix_mult_U0_B_24_address0,
        B_24_ce0 => compute_weights_with_matrix_mult_U0_B_24_ce0,
        B_24_q0 => B_24_q0,
        B_25_address0 => compute_weights_with_matrix_mult_U0_B_25_address0,
        B_25_ce0 => compute_weights_with_matrix_mult_U0_B_25_ce0,
        B_25_q0 => B_25_q0,
        B_26_address0 => compute_weights_with_matrix_mult_U0_B_26_address0,
        B_26_ce0 => compute_weights_with_matrix_mult_U0_B_26_ce0,
        B_26_q0 => B_26_q0,
        B_27_address0 => compute_weights_with_matrix_mult_U0_B_27_address0,
        B_27_ce0 => compute_weights_with_matrix_mult_U0_B_27_ce0,
        B_27_q0 => B_27_q0,
        B_28_address0 => compute_weights_with_matrix_mult_U0_B_28_address0,
        B_28_ce0 => compute_weights_with_matrix_mult_U0_B_28_ce0,
        B_28_q0 => B_28_q0,
        B_29_address0 => compute_weights_with_matrix_mult_U0_B_29_address0,
        B_29_ce0 => compute_weights_with_matrix_mult_U0_B_29_ce0,
        B_29_q0 => B_29_q0,
        B_30_address0 => compute_weights_with_matrix_mult_U0_B_30_address0,
        B_30_ce0 => compute_weights_with_matrix_mult_U0_B_30_ce0,
        B_30_q0 => B_30_q0,
        B_31_address0 => compute_weights_with_matrix_mult_U0_B_31_address0,
        B_31_ce0 => compute_weights_with_matrix_mult_U0_B_31_ce0,
        B_31_q0 => B_31_q0,
        W_V_0_address0 => compute_weights_with_matrix_mult_U0_W_V_0_address0,
        W_V_0_ce0 => compute_weights_with_matrix_mult_U0_W_V_0_ce0,
        W_V_0_we0 => compute_weights_with_matrix_mult_U0_W_V_0_we0,
        W_V_0_d0 => compute_weights_with_matrix_mult_U0_W_V_0_d0,
        W_V_1_address0 => compute_weights_with_matrix_mult_U0_W_V_1_address0,
        W_V_1_ce0 => compute_weights_with_matrix_mult_U0_W_V_1_ce0,
        W_V_1_we0 => compute_weights_with_matrix_mult_U0_W_V_1_we0,
        W_V_1_d0 => compute_weights_with_matrix_mult_U0_W_V_1_d0,
        W_V_2_address0 => compute_weights_with_matrix_mult_U0_W_V_2_address0,
        W_V_2_ce0 => compute_weights_with_matrix_mult_U0_W_V_2_ce0,
        W_V_2_we0 => compute_weights_with_matrix_mult_U0_W_V_2_we0,
        W_V_2_d0 => compute_weights_with_matrix_mult_U0_W_V_2_d0,
        W_V_3_address0 => compute_weights_with_matrix_mult_U0_W_V_3_address0,
        W_V_3_ce0 => compute_weights_with_matrix_mult_U0_W_V_3_ce0,
        W_V_3_we0 => compute_weights_with_matrix_mult_U0_W_V_3_we0,
        W_V_3_d0 => compute_weights_with_matrix_mult_U0_W_V_3_d0,
        W_V_4_address0 => compute_weights_with_matrix_mult_U0_W_V_4_address0,
        W_V_4_ce0 => compute_weights_with_matrix_mult_U0_W_V_4_ce0,
        W_V_4_we0 => compute_weights_with_matrix_mult_U0_W_V_4_we0,
        W_V_4_d0 => compute_weights_with_matrix_mult_U0_W_V_4_d0,
        W_V_5_address0 => compute_weights_with_matrix_mult_U0_W_V_5_address0,
        W_V_5_ce0 => compute_weights_with_matrix_mult_U0_W_V_5_ce0,
        W_V_5_we0 => compute_weights_with_matrix_mult_U0_W_V_5_we0,
        W_V_5_d0 => compute_weights_with_matrix_mult_U0_W_V_5_d0,
        W_V_6_address0 => compute_weights_with_matrix_mult_U0_W_V_6_address0,
        W_V_6_ce0 => compute_weights_with_matrix_mult_U0_W_V_6_ce0,
        W_V_6_we0 => compute_weights_with_matrix_mult_U0_W_V_6_we0,
        W_V_6_d0 => compute_weights_with_matrix_mult_U0_W_V_6_d0,
        W_V_7_address0 => compute_weights_with_matrix_mult_U0_W_V_7_address0,
        W_V_7_ce0 => compute_weights_with_matrix_mult_U0_W_V_7_ce0,
        W_V_7_we0 => compute_weights_with_matrix_mult_U0_W_V_7_we0,
        W_V_7_d0 => compute_weights_with_matrix_mult_U0_W_V_7_d0,
        W_V_8_address0 => compute_weights_with_matrix_mult_U0_W_V_8_address0,
        W_V_8_ce0 => compute_weights_with_matrix_mult_U0_W_V_8_ce0,
        W_V_8_we0 => compute_weights_with_matrix_mult_U0_W_V_8_we0,
        W_V_8_d0 => compute_weights_with_matrix_mult_U0_W_V_8_d0,
        W_V_9_address0 => compute_weights_with_matrix_mult_U0_W_V_9_address0,
        W_V_9_ce0 => compute_weights_with_matrix_mult_U0_W_V_9_ce0,
        W_V_9_we0 => compute_weights_with_matrix_mult_U0_W_V_9_we0,
        W_V_9_d0 => compute_weights_with_matrix_mult_U0_W_V_9_d0,
        W_V_10_address0 => compute_weights_with_matrix_mult_U0_W_V_10_address0,
        W_V_10_ce0 => compute_weights_with_matrix_mult_U0_W_V_10_ce0,
        W_V_10_we0 => compute_weights_with_matrix_mult_U0_W_V_10_we0,
        W_V_10_d0 => compute_weights_with_matrix_mult_U0_W_V_10_d0,
        W_V_11_address0 => compute_weights_with_matrix_mult_U0_W_V_11_address0,
        W_V_11_ce0 => compute_weights_with_matrix_mult_U0_W_V_11_ce0,
        W_V_11_we0 => compute_weights_with_matrix_mult_U0_W_V_11_we0,
        W_V_11_d0 => compute_weights_with_matrix_mult_U0_W_V_11_d0,
        W_V_12_address0 => compute_weights_with_matrix_mult_U0_W_V_12_address0,
        W_V_12_ce0 => compute_weights_with_matrix_mult_U0_W_V_12_ce0,
        W_V_12_we0 => compute_weights_with_matrix_mult_U0_W_V_12_we0,
        W_V_12_d0 => compute_weights_with_matrix_mult_U0_W_V_12_d0,
        W_V_13_address0 => compute_weights_with_matrix_mult_U0_W_V_13_address0,
        W_V_13_ce0 => compute_weights_with_matrix_mult_U0_W_V_13_ce0,
        W_V_13_we0 => compute_weights_with_matrix_mult_U0_W_V_13_we0,
        W_V_13_d0 => compute_weights_with_matrix_mult_U0_W_V_13_d0,
        W_V_14_address0 => compute_weights_with_matrix_mult_U0_W_V_14_address0,
        W_V_14_ce0 => compute_weights_with_matrix_mult_U0_W_V_14_ce0,
        W_V_14_we0 => compute_weights_with_matrix_mult_U0_W_V_14_we0,
        W_V_14_d0 => compute_weights_with_matrix_mult_U0_W_V_14_d0,
        W_V_15_address0 => compute_weights_with_matrix_mult_U0_W_V_15_address0,
        W_V_15_ce0 => compute_weights_with_matrix_mult_U0_W_V_15_ce0,
        W_V_15_we0 => compute_weights_with_matrix_mult_U0_W_V_15_we0,
        W_V_15_d0 => compute_weights_with_matrix_mult_U0_W_V_15_d0,
        W_V_16_address0 => compute_weights_with_matrix_mult_U0_W_V_16_address0,
        W_V_16_ce0 => compute_weights_with_matrix_mult_U0_W_V_16_ce0,
        W_V_16_we0 => compute_weights_with_matrix_mult_U0_W_V_16_we0,
        W_V_16_d0 => compute_weights_with_matrix_mult_U0_W_V_16_d0,
        W_V_17_address0 => compute_weights_with_matrix_mult_U0_W_V_17_address0,
        W_V_17_ce0 => compute_weights_with_matrix_mult_U0_W_V_17_ce0,
        W_V_17_we0 => compute_weights_with_matrix_mult_U0_W_V_17_we0,
        W_V_17_d0 => compute_weights_with_matrix_mult_U0_W_V_17_d0,
        W_V_18_address0 => compute_weights_with_matrix_mult_U0_W_V_18_address0,
        W_V_18_ce0 => compute_weights_with_matrix_mult_U0_W_V_18_ce0,
        W_V_18_we0 => compute_weights_with_matrix_mult_U0_W_V_18_we0,
        W_V_18_d0 => compute_weights_with_matrix_mult_U0_W_V_18_d0,
        W_V_19_address0 => compute_weights_with_matrix_mult_U0_W_V_19_address0,
        W_V_19_ce0 => compute_weights_with_matrix_mult_U0_W_V_19_ce0,
        W_V_19_we0 => compute_weights_with_matrix_mult_U0_W_V_19_we0,
        W_V_19_d0 => compute_weights_with_matrix_mult_U0_W_V_19_d0,
        W_V_20_address0 => compute_weights_with_matrix_mult_U0_W_V_20_address0,
        W_V_20_ce0 => compute_weights_with_matrix_mult_U0_W_V_20_ce0,
        W_V_20_we0 => compute_weights_with_matrix_mult_U0_W_V_20_we0,
        W_V_20_d0 => compute_weights_with_matrix_mult_U0_W_V_20_d0,
        W_V_21_address0 => compute_weights_with_matrix_mult_U0_W_V_21_address0,
        W_V_21_ce0 => compute_weights_with_matrix_mult_U0_W_V_21_ce0,
        W_V_21_we0 => compute_weights_with_matrix_mult_U0_W_V_21_we0,
        W_V_21_d0 => compute_weights_with_matrix_mult_U0_W_V_21_d0,
        W_V_22_address0 => compute_weights_with_matrix_mult_U0_W_V_22_address0,
        W_V_22_ce0 => compute_weights_with_matrix_mult_U0_W_V_22_ce0,
        W_V_22_we0 => compute_weights_with_matrix_mult_U0_W_V_22_we0,
        W_V_22_d0 => compute_weights_with_matrix_mult_U0_W_V_22_d0,
        W_V_23_address0 => compute_weights_with_matrix_mult_U0_W_V_23_address0,
        W_V_23_ce0 => compute_weights_with_matrix_mult_U0_W_V_23_ce0,
        W_V_23_we0 => compute_weights_with_matrix_mult_U0_W_V_23_we0,
        W_V_23_d0 => compute_weights_with_matrix_mult_U0_W_V_23_d0,
        W_V_24_address0 => compute_weights_with_matrix_mult_U0_W_V_24_address0,
        W_V_24_ce0 => compute_weights_with_matrix_mult_U0_W_V_24_ce0,
        W_V_24_we0 => compute_weights_with_matrix_mult_U0_W_V_24_we0,
        W_V_24_d0 => compute_weights_with_matrix_mult_U0_W_V_24_d0,
        W_V_25_address0 => compute_weights_with_matrix_mult_U0_W_V_25_address0,
        W_V_25_ce0 => compute_weights_with_matrix_mult_U0_W_V_25_ce0,
        W_V_25_we0 => compute_weights_with_matrix_mult_U0_W_V_25_we0,
        W_V_25_d0 => compute_weights_with_matrix_mult_U0_W_V_25_d0,
        W_V_26_address0 => compute_weights_with_matrix_mult_U0_W_V_26_address0,
        W_V_26_ce0 => compute_weights_with_matrix_mult_U0_W_V_26_ce0,
        W_V_26_we0 => compute_weights_with_matrix_mult_U0_W_V_26_we0,
        W_V_26_d0 => compute_weights_with_matrix_mult_U0_W_V_26_d0,
        W_V_27_address0 => compute_weights_with_matrix_mult_U0_W_V_27_address0,
        W_V_27_ce0 => compute_weights_with_matrix_mult_U0_W_V_27_ce0,
        W_V_27_we0 => compute_weights_with_matrix_mult_U0_W_V_27_we0,
        W_V_27_d0 => compute_weights_with_matrix_mult_U0_W_V_27_d0,
        W_V_28_address0 => compute_weights_with_matrix_mult_U0_W_V_28_address0,
        W_V_28_ce0 => compute_weights_with_matrix_mult_U0_W_V_28_ce0,
        W_V_28_we0 => compute_weights_with_matrix_mult_U0_W_V_28_we0,
        W_V_28_d0 => compute_weights_with_matrix_mult_U0_W_V_28_d0,
        W_V_29_address0 => compute_weights_with_matrix_mult_U0_W_V_29_address0,
        W_V_29_ce0 => compute_weights_with_matrix_mult_U0_W_V_29_ce0,
        W_V_29_we0 => compute_weights_with_matrix_mult_U0_W_V_29_we0,
        W_V_29_d0 => compute_weights_with_matrix_mult_U0_W_V_29_d0,
        W_V_30_address0 => compute_weights_with_matrix_mult_U0_W_V_30_address0,
        W_V_30_ce0 => compute_weights_with_matrix_mult_U0_W_V_30_ce0,
        W_V_30_we0 => compute_weights_with_matrix_mult_U0_W_V_30_we0,
        W_V_30_d0 => compute_weights_with_matrix_mult_U0_W_V_30_d0,
        W_V_31_address0 => compute_weights_with_matrix_mult_U0_W_V_31_address0,
        W_V_31_ce0 => compute_weights_with_matrix_mult_U0_W_V_31_ce0,
        W_V_31_we0 => compute_weights_with_matrix_mult_U0_W_V_31_we0,
        W_V_31_d0 => compute_weights_with_matrix_mult_U0_W_V_31_d0);

    compute_biases_with_multiple_dot_products_U0 : component matrix_matrix_mult_streaming_compute_biases_with_multiple_dot_products
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => compute_biases_with_multiple_dot_products_U0_ap_start,
        ap_done => compute_biases_with_multiple_dot_products_U0_ap_done,
        ap_continue => compute_biases_with_multiple_dot_products_U0_ap_continue,
        ap_idle => compute_biases_with_multiple_dot_products_U0_ap_idle,
        ap_ready => compute_biases_with_multiple_dot_products_U0_ap_ready,
        B_0_address1 => compute_biases_with_multiple_dot_products_U0_B_0_address1,
        B_0_ce1 => compute_biases_with_multiple_dot_products_U0_B_0_ce1,
        B_0_q1 => B_0_q1,
        B_1_address1 => compute_biases_with_multiple_dot_products_U0_B_1_address1,
        B_1_ce1 => compute_biases_with_multiple_dot_products_U0_B_1_ce1,
        B_1_q1 => B_1_q1,
        B_2_address1 => compute_biases_with_multiple_dot_products_U0_B_2_address1,
        B_2_ce1 => compute_biases_with_multiple_dot_products_U0_B_2_ce1,
        B_2_q1 => B_2_q1,
        B_3_address1 => compute_biases_with_multiple_dot_products_U0_B_3_address1,
        B_3_ce1 => compute_biases_with_multiple_dot_products_U0_B_3_ce1,
        B_3_q1 => B_3_q1,
        B_4_address1 => compute_biases_with_multiple_dot_products_U0_B_4_address1,
        B_4_ce1 => compute_biases_with_multiple_dot_products_U0_B_4_ce1,
        B_4_q1 => B_4_q1,
        B_5_address1 => compute_biases_with_multiple_dot_products_U0_B_5_address1,
        B_5_ce1 => compute_biases_with_multiple_dot_products_U0_B_5_ce1,
        B_5_q1 => B_5_q1,
        B_6_address1 => compute_biases_with_multiple_dot_products_U0_B_6_address1,
        B_6_ce1 => compute_biases_with_multiple_dot_products_U0_B_6_ce1,
        B_6_q1 => B_6_q1,
        B_7_address1 => compute_biases_with_multiple_dot_products_U0_B_7_address1,
        B_7_ce1 => compute_biases_with_multiple_dot_products_U0_B_7_ce1,
        B_7_q1 => B_7_q1,
        B_8_address1 => compute_biases_with_multiple_dot_products_U0_B_8_address1,
        B_8_ce1 => compute_biases_with_multiple_dot_products_U0_B_8_ce1,
        B_8_q1 => B_8_q1,
        B_9_address1 => compute_biases_with_multiple_dot_products_U0_B_9_address1,
        B_9_ce1 => compute_biases_with_multiple_dot_products_U0_B_9_ce1,
        B_9_q1 => B_9_q1,
        B_10_address1 => compute_biases_with_multiple_dot_products_U0_B_10_address1,
        B_10_ce1 => compute_biases_with_multiple_dot_products_U0_B_10_ce1,
        B_10_q1 => B_10_q1,
        B_11_address1 => compute_biases_with_multiple_dot_products_U0_B_11_address1,
        B_11_ce1 => compute_biases_with_multiple_dot_products_U0_B_11_ce1,
        B_11_q1 => B_11_q1,
        B_12_address1 => compute_biases_with_multiple_dot_products_U0_B_12_address1,
        B_12_ce1 => compute_biases_with_multiple_dot_products_U0_B_12_ce1,
        B_12_q1 => B_12_q1,
        B_13_address1 => compute_biases_with_multiple_dot_products_U0_B_13_address1,
        B_13_ce1 => compute_biases_with_multiple_dot_products_U0_B_13_ce1,
        B_13_q1 => B_13_q1,
        B_14_address1 => compute_biases_with_multiple_dot_products_U0_B_14_address1,
        B_14_ce1 => compute_biases_with_multiple_dot_products_U0_B_14_ce1,
        B_14_q1 => B_14_q1,
        B_15_address1 => compute_biases_with_multiple_dot_products_U0_B_15_address1,
        B_15_ce1 => compute_biases_with_multiple_dot_products_U0_B_15_ce1,
        B_15_q1 => B_15_q1,
        B_16_address1 => compute_biases_with_multiple_dot_products_U0_B_16_address1,
        B_16_ce1 => compute_biases_with_multiple_dot_products_U0_B_16_ce1,
        B_16_q1 => B_16_q1,
        B_17_address1 => compute_biases_with_multiple_dot_products_U0_B_17_address1,
        B_17_ce1 => compute_biases_with_multiple_dot_products_U0_B_17_ce1,
        B_17_q1 => B_17_q1,
        B_18_address1 => compute_biases_with_multiple_dot_products_U0_B_18_address1,
        B_18_ce1 => compute_biases_with_multiple_dot_products_U0_B_18_ce1,
        B_18_q1 => B_18_q1,
        B_19_address1 => compute_biases_with_multiple_dot_products_U0_B_19_address1,
        B_19_ce1 => compute_biases_with_multiple_dot_products_U0_B_19_ce1,
        B_19_q1 => B_19_q1,
        B_20_address1 => compute_biases_with_multiple_dot_products_U0_B_20_address1,
        B_20_ce1 => compute_biases_with_multiple_dot_products_U0_B_20_ce1,
        B_20_q1 => B_20_q1,
        B_21_address1 => compute_biases_with_multiple_dot_products_U0_B_21_address1,
        B_21_ce1 => compute_biases_with_multiple_dot_products_U0_B_21_ce1,
        B_21_q1 => B_21_q1,
        B_22_address1 => compute_biases_with_multiple_dot_products_U0_B_22_address1,
        B_22_ce1 => compute_biases_with_multiple_dot_products_U0_B_22_ce1,
        B_22_q1 => B_22_q1,
        B_23_address1 => compute_biases_with_multiple_dot_products_U0_B_23_address1,
        B_23_ce1 => compute_biases_with_multiple_dot_products_U0_B_23_ce1,
        B_23_q1 => B_23_q1,
        B_24_address1 => compute_biases_with_multiple_dot_products_U0_B_24_address1,
        B_24_ce1 => compute_biases_with_multiple_dot_products_U0_B_24_ce1,
        B_24_q1 => B_24_q1,
        B_25_address1 => compute_biases_with_multiple_dot_products_U0_B_25_address1,
        B_25_ce1 => compute_biases_with_multiple_dot_products_U0_B_25_ce1,
        B_25_q1 => B_25_q1,
        B_26_address1 => compute_biases_with_multiple_dot_products_U0_B_26_address1,
        B_26_ce1 => compute_biases_with_multiple_dot_products_U0_B_26_ce1,
        B_26_q1 => B_26_q1,
        B_27_address1 => compute_biases_with_multiple_dot_products_U0_B_27_address1,
        B_27_ce1 => compute_biases_with_multiple_dot_products_U0_B_27_ce1,
        B_27_q1 => B_27_q1,
        B_28_address1 => compute_biases_with_multiple_dot_products_U0_B_28_address1,
        B_28_ce1 => compute_biases_with_multiple_dot_products_U0_B_28_ce1,
        B_28_q1 => B_28_q1,
        B_29_address1 => compute_biases_with_multiple_dot_products_U0_B_29_address1,
        B_29_ce1 => compute_biases_with_multiple_dot_products_U0_B_29_ce1,
        B_29_q1 => B_29_q1,
        B_30_address1 => compute_biases_with_multiple_dot_products_U0_B_30_address1,
        B_30_ce1 => compute_biases_with_multiple_dot_products_U0_B_30_ce1,
        B_30_q1 => B_30_q1,
        B_31_address1 => compute_biases_with_multiple_dot_products_U0_B_31_address1,
        B_31_ce1 => compute_biases_with_multiple_dot_products_U0_B_31_ce1,
        B_31_q1 => B_31_q1,
        W_V_0_address0 => compute_biases_with_multiple_dot_products_U0_W_V_0_address0,
        W_V_0_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_0_ce0,
        W_V_0_q0 => W_V_0_t_q0,
        W_V_1_address0 => compute_biases_with_multiple_dot_products_U0_W_V_1_address0,
        W_V_1_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_1_ce0,
        W_V_1_q0 => W_V_1_t_q0,
        W_V_10_address0 => compute_biases_with_multiple_dot_products_U0_W_V_10_address0,
        W_V_10_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_10_ce0,
        W_V_10_q0 => W_V_10_t_q0,
        W_V_11_address0 => compute_biases_with_multiple_dot_products_U0_W_V_11_address0,
        W_V_11_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_11_ce0,
        W_V_11_q0 => W_V_11_t_q0,
        W_V_12_address0 => compute_biases_with_multiple_dot_products_U0_W_V_12_address0,
        W_V_12_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_12_ce0,
        W_V_12_q0 => W_V_12_t_q0,
        W_V_13_address0 => compute_biases_with_multiple_dot_products_U0_W_V_13_address0,
        W_V_13_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_13_ce0,
        W_V_13_q0 => W_V_13_t_q0,
        W_V_14_address0 => compute_biases_with_multiple_dot_products_U0_W_V_14_address0,
        W_V_14_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_14_ce0,
        W_V_14_q0 => W_V_14_t_q0,
        W_V_15_address0 => compute_biases_with_multiple_dot_products_U0_W_V_15_address0,
        W_V_15_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_15_ce0,
        W_V_15_q0 => W_V_15_t_q0,
        W_V_16_address0 => compute_biases_with_multiple_dot_products_U0_W_V_16_address0,
        W_V_16_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_16_ce0,
        W_V_16_q0 => W_V_16_t_q0,
        W_V_17_address0 => compute_biases_with_multiple_dot_products_U0_W_V_17_address0,
        W_V_17_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_17_ce0,
        W_V_17_q0 => W_V_17_t_q0,
        W_V_18_address0 => compute_biases_with_multiple_dot_products_U0_W_V_18_address0,
        W_V_18_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_18_ce0,
        W_V_18_q0 => W_V_18_t_q0,
        W_V_19_address0 => compute_biases_with_multiple_dot_products_U0_W_V_19_address0,
        W_V_19_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_19_ce0,
        W_V_19_q0 => W_V_19_t_q0,
        W_V_2_address0 => compute_biases_with_multiple_dot_products_U0_W_V_2_address0,
        W_V_2_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_2_ce0,
        W_V_2_q0 => W_V_2_t_q0,
        W_V_20_address0 => compute_biases_with_multiple_dot_products_U0_W_V_20_address0,
        W_V_20_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_20_ce0,
        W_V_20_q0 => W_V_20_t_q0,
        W_V_21_address0 => compute_biases_with_multiple_dot_products_U0_W_V_21_address0,
        W_V_21_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_21_ce0,
        W_V_21_q0 => W_V_21_t_q0,
        W_V_22_address0 => compute_biases_with_multiple_dot_products_U0_W_V_22_address0,
        W_V_22_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_22_ce0,
        W_V_22_q0 => W_V_22_t_q0,
        W_V_23_address0 => compute_biases_with_multiple_dot_products_U0_W_V_23_address0,
        W_V_23_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_23_ce0,
        W_V_23_q0 => W_V_23_t_q0,
        W_V_24_address0 => compute_biases_with_multiple_dot_products_U0_W_V_24_address0,
        W_V_24_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_24_ce0,
        W_V_24_q0 => W_V_24_t_q0,
        W_V_25_address0 => compute_biases_with_multiple_dot_products_U0_W_V_25_address0,
        W_V_25_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_25_ce0,
        W_V_25_q0 => W_V_25_t_q0,
        W_V_26_address0 => compute_biases_with_multiple_dot_products_U0_W_V_26_address0,
        W_V_26_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_26_ce0,
        W_V_26_q0 => W_V_26_t_q0,
        W_V_27_address0 => compute_biases_with_multiple_dot_products_U0_W_V_27_address0,
        W_V_27_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_27_ce0,
        W_V_27_q0 => W_V_27_t_q0,
        W_V_28_address0 => compute_biases_with_multiple_dot_products_U0_W_V_28_address0,
        W_V_28_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_28_ce0,
        W_V_28_q0 => W_V_28_t_q0,
        W_V_29_address0 => compute_biases_with_multiple_dot_products_U0_W_V_29_address0,
        W_V_29_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_29_ce0,
        W_V_29_q0 => W_V_29_t_q0,
        W_V_3_address0 => compute_biases_with_multiple_dot_products_U0_W_V_3_address0,
        W_V_3_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_3_ce0,
        W_V_3_q0 => W_V_3_t_q0,
        W_V_30_address0 => compute_biases_with_multiple_dot_products_U0_W_V_30_address0,
        W_V_30_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_30_ce0,
        W_V_30_q0 => W_V_30_t_q0,
        W_V_31_address0 => compute_biases_with_multiple_dot_products_U0_W_V_31_address0,
        W_V_31_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_31_ce0,
        W_V_31_q0 => W_V_31_t_q0,
        W_V_4_address0 => compute_biases_with_multiple_dot_products_U0_W_V_4_address0,
        W_V_4_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_4_ce0,
        W_V_4_q0 => W_V_4_t_q0,
        W_V_5_address0 => compute_biases_with_multiple_dot_products_U0_W_V_5_address0,
        W_V_5_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_5_ce0,
        W_V_5_q0 => W_V_5_t_q0,
        W_V_6_address0 => compute_biases_with_multiple_dot_products_U0_W_V_6_address0,
        W_V_6_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_6_ce0,
        W_V_6_q0 => W_V_6_t_q0,
        W_V_7_address0 => compute_biases_with_multiple_dot_products_U0_W_V_7_address0,
        W_V_7_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_7_ce0,
        W_V_7_q0 => W_V_7_t_q0,
        W_V_8_address0 => compute_biases_with_multiple_dot_products_U0_W_V_8_address0,
        W_V_8_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_8_ce0,
        W_V_8_q0 => W_V_8_t_q0,
        W_V_9_address0 => compute_biases_with_multiple_dot_products_U0_W_V_9_address0,
        W_V_9_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_9_ce0,
        W_V_9_q0 => W_V_9_t_q0);

    compute_scores_U0 : component matrix_matrix_mult_streaming_compute_scores
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => compute_scores_U0_ap_start,
        ap_done => compute_scores_U0_ap_done,
        ap_continue => compute_scores_U0_ap_continue,
        ap_idle => compute_scores_U0_ap_idle,
        ap_ready => compute_scores_U0_ap_ready,
        feature_vector_TDATA => feature_vector_TDATA,
        feature_vector_TVALID => feature_vector_TVALID,
        feature_vector_TREADY => compute_scores_U0_feature_vector_TREADY,
        feature_vector_TKEEP => feature_vector_TKEEP,
        feature_vector_TSTRB => feature_vector_TSTRB,
        feature_vector_TUSER => feature_vector_TUSER,
        feature_vector_TLAST => feature_vector_TLAST,
        feature_vector_TID => feature_vector_TID,
        feature_vector_TDEST => feature_vector_TDEST);

    W_V_0_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_0_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_0_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_0_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_0_d0,
        i_q0 => W_V_0_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_0_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_0_i_full_n,
        i_write => ap_channel_done_W_V_0,
        t_empty_n => W_V_0_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_1_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_1_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_1_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_1_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_1_d0,
        i_q0 => W_V_1_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_1_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_1_i_full_n,
        i_write => ap_channel_done_W_V_1,
        t_empty_n => W_V_1_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_2_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_2_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_2_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_2_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_2_d0,
        i_q0 => W_V_2_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_2_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_2_i_full_n,
        i_write => ap_channel_done_W_V_2,
        t_empty_n => W_V_2_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_3_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_3_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_3_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_3_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_3_d0,
        i_q0 => W_V_3_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_3_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_3_i_full_n,
        i_write => ap_channel_done_W_V_3,
        t_empty_n => W_V_3_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_4_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_4_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_4_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_4_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_4_d0,
        i_q0 => W_V_4_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_4_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_4_i_full_n,
        i_write => ap_channel_done_W_V_4,
        t_empty_n => W_V_4_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_5_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_5_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_5_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_5_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_5_d0,
        i_q0 => W_V_5_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_5_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_5_i_full_n,
        i_write => ap_channel_done_W_V_5,
        t_empty_n => W_V_5_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_6_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_6_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_6_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_6_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_6_d0,
        i_q0 => W_V_6_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_6_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_6_i_full_n,
        i_write => ap_channel_done_W_V_6,
        t_empty_n => W_V_6_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_7_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_7_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_7_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_7_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_7_d0,
        i_q0 => W_V_7_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_7_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_7_i_full_n,
        i_write => ap_channel_done_W_V_7,
        t_empty_n => W_V_7_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_8_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_8_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_8_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_8_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_8_d0,
        i_q0 => W_V_8_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_8_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_8_i_full_n,
        i_write => ap_channel_done_W_V_8,
        t_empty_n => W_V_8_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_9_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_9_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_9_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_9_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_9_d0,
        i_q0 => W_V_9_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_9_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_9_i_full_n,
        i_write => ap_channel_done_W_V_9,
        t_empty_n => W_V_9_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_10_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_10_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_10_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_10_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_10_d0,
        i_q0 => W_V_10_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_10_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_10_i_full_n,
        i_write => ap_channel_done_W_V_10,
        t_empty_n => W_V_10_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_11_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_11_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_11_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_11_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_11_d0,
        i_q0 => W_V_11_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_11_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_11_i_full_n,
        i_write => ap_channel_done_W_V_11,
        t_empty_n => W_V_11_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_12_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_12_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_12_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_12_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_12_d0,
        i_q0 => W_V_12_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_12_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_12_i_full_n,
        i_write => ap_channel_done_W_V_12,
        t_empty_n => W_V_12_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_13_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_13_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_13_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_13_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_13_d0,
        i_q0 => W_V_13_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_13_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_13_i_full_n,
        i_write => ap_channel_done_W_V_13,
        t_empty_n => W_V_13_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_14_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_14_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_14_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_14_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_14_d0,
        i_q0 => W_V_14_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_14_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_14_i_full_n,
        i_write => ap_channel_done_W_V_14,
        t_empty_n => W_V_14_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_15_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_15_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_15_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_15_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_15_d0,
        i_q0 => W_V_15_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_15_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_15_i_full_n,
        i_write => ap_channel_done_W_V_15,
        t_empty_n => W_V_15_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_16_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_16_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_16_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_16_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_16_d0,
        i_q0 => W_V_16_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_16_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_16_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_16_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_16_i_full_n,
        i_write => ap_channel_done_W_V_16,
        t_empty_n => W_V_16_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_17_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_17_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_17_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_17_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_17_d0,
        i_q0 => W_V_17_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_17_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_17_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_17_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_17_i_full_n,
        i_write => ap_channel_done_W_V_17,
        t_empty_n => W_V_17_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_18_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_18_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_18_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_18_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_18_d0,
        i_q0 => W_V_18_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_18_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_18_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_18_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_18_i_full_n,
        i_write => ap_channel_done_W_V_18,
        t_empty_n => W_V_18_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_19_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_19_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_19_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_19_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_19_d0,
        i_q0 => W_V_19_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_19_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_19_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_19_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_19_i_full_n,
        i_write => ap_channel_done_W_V_19,
        t_empty_n => W_V_19_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_20_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_20_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_20_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_20_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_20_d0,
        i_q0 => W_V_20_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_20_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_20_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_20_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_20_i_full_n,
        i_write => ap_channel_done_W_V_20,
        t_empty_n => W_V_20_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_21_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_21_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_21_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_21_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_21_d0,
        i_q0 => W_V_21_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_21_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_21_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_21_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_21_i_full_n,
        i_write => ap_channel_done_W_V_21,
        t_empty_n => W_V_21_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_22_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_22_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_22_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_22_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_22_d0,
        i_q0 => W_V_22_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_22_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_22_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_22_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_22_i_full_n,
        i_write => ap_channel_done_W_V_22,
        t_empty_n => W_V_22_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_23_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_23_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_23_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_23_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_23_d0,
        i_q0 => W_V_23_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_23_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_23_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_23_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_23_i_full_n,
        i_write => ap_channel_done_W_V_23,
        t_empty_n => W_V_23_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_24_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_24_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_24_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_24_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_24_d0,
        i_q0 => W_V_24_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_24_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_24_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_24_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_24_i_full_n,
        i_write => ap_channel_done_W_V_24,
        t_empty_n => W_V_24_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_25_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_25_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_25_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_25_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_25_d0,
        i_q0 => W_V_25_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_25_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_25_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_25_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_25_i_full_n,
        i_write => ap_channel_done_W_V_25,
        t_empty_n => W_V_25_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_26_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_26_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_26_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_26_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_26_d0,
        i_q0 => W_V_26_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_26_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_26_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_26_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_26_i_full_n,
        i_write => ap_channel_done_W_V_26,
        t_empty_n => W_V_26_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_27_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_27_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_27_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_27_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_27_d0,
        i_q0 => W_V_27_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_27_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_27_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_27_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_27_i_full_n,
        i_write => ap_channel_done_W_V_27,
        t_empty_n => W_V_27_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_28_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_28_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_28_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_28_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_28_d0,
        i_q0 => W_V_28_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_28_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_28_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_28_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_28_i_full_n,
        i_write => ap_channel_done_W_V_28,
        t_empty_n => W_V_28_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_29_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_29_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_29_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_29_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_29_d0,
        i_q0 => W_V_29_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_29_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_29_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_29_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_29_i_full_n,
        i_write => ap_channel_done_W_V_29,
        t_empty_n => W_V_29_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_30_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_30_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_30_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_30_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_30_d0,
        i_q0 => W_V_30_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_30_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_30_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_30_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_30_i_full_n,
        i_write => ap_channel_done_W_V_30,
        t_empty_n => W_V_30_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);

    W_V_31_U : component matrix_matrix_mult_streaming_W_V_0
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_weights_with_matrix_mult_U0_W_V_31_address0,
        i_ce0 => compute_weights_with_matrix_mult_U0_W_V_31_ce0,
        i_we0 => compute_weights_with_matrix_mult_U0_W_V_31_we0,
        i_d0 => compute_weights_with_matrix_mult_U0_W_V_31_d0,
        i_q0 => W_V_31_i_q0,
        t_address0 => compute_biases_with_multiple_dot_products_U0_W_V_31_address0,
        t_ce0 => compute_biases_with_multiple_dot_products_U0_W_V_31_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => W_V_31_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => W_V_31_i_full_n,
        i_write => ap_channel_done_W_V_31,
        t_empty_n => W_V_31_t_empty_n,
        t_read => compute_biases_with_multiple_dot_products_U0_ap_ready);





    ap_sync_reg_channel_write_W_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_0 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_0 <= ap_sync_channel_write_W_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_1 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_1 <= ap_sync_channel_write_W_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_10 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_10 <= ap_sync_channel_write_W_V_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_11 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_11 <= ap_sync_channel_write_W_V_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_12 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_12 <= ap_sync_channel_write_W_V_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_13 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_13 <= ap_sync_channel_write_W_V_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_14 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_14 <= ap_sync_channel_write_W_V_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_15 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_15 <= ap_sync_channel_write_W_V_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_16 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_16 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_16 <= ap_sync_channel_write_W_V_16;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_17 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_17 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_17 <= ap_sync_channel_write_W_V_17;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_18 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_18 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_18 <= ap_sync_channel_write_W_V_18;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_19 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_19 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_19 <= ap_sync_channel_write_W_V_19;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_2 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_2 <= ap_sync_channel_write_W_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_20 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_20 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_20 <= ap_sync_channel_write_W_V_20;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_21 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_21 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_21 <= ap_sync_channel_write_W_V_21;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_22 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_22 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_22 <= ap_sync_channel_write_W_V_22;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_23 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_23 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_23 <= ap_sync_channel_write_W_V_23;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_24 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_24 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_24 <= ap_sync_channel_write_W_V_24;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_25 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_25 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_25 <= ap_sync_channel_write_W_V_25;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_26 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_26 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_26 <= ap_sync_channel_write_W_V_26;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_27 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_27 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_27 <= ap_sync_channel_write_W_V_27;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_28 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_28 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_28 <= ap_sync_channel_write_W_V_28;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_29 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_29 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_29 <= ap_sync_channel_write_W_V_29;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_3 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_3 <= ap_sync_channel_write_W_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_30 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_30 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_30 <= ap_sync_channel_write_W_V_30;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_31 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_31 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_31 <= ap_sync_channel_write_W_V_31;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_4 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_4 <= ap_sync_channel_write_W_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_5 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_5 <= ap_sync_channel_write_W_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_6 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_6 <= ap_sync_channel_write_W_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_7 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_7 <= ap_sync_channel_write_W_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_8 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_8 <= ap_sync_channel_write_W_V_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_W_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_W_V_9 <= ap_const_logic_0;
            else
                if (((compute_weights_with_matrix_mult_U0_ap_done and compute_weights_with_matrix_mult_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_W_V_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_W_V_9 <= ap_sync_channel_write_W_V_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready <= ap_sync_compute_biases_with_multiple_dot_products_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_compute_scores_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_compute_scores_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_compute_scores_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_compute_scores_U0_ap_ready <= ap_sync_compute_scores_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready <= ap_sync_compute_weights_with_matrix_mult_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    A_0_address0 <= compute_weights_with_matrix_mult_U0_A_0_address0;
    A_0_address1 <= ap_const_lv5_0;
    A_0_ce0 <= compute_weights_with_matrix_mult_U0_A_0_ce0;
    A_0_ce1 <= ap_const_logic_0;
    A_0_d0 <= ap_const_lv128_lc_1;
    A_0_d1 <= ap_const_lv128_lc_1;
    A_0_we0 <= ap_const_logic_0;
    A_0_we1 <= ap_const_logic_0;
    A_10_address0 <= compute_weights_with_matrix_mult_U0_A_10_address0;
    A_10_address1 <= ap_const_lv5_0;
    A_10_ce0 <= compute_weights_with_matrix_mult_U0_A_10_ce0;
    A_10_ce1 <= ap_const_logic_0;
    A_10_d0 <= ap_const_lv128_lc_1;
    A_10_d1 <= ap_const_lv128_lc_1;
    A_10_we0 <= ap_const_logic_0;
    A_10_we1 <= ap_const_logic_0;
    A_11_address0 <= compute_weights_with_matrix_mult_U0_A_11_address0;
    A_11_address1 <= ap_const_lv5_0;
    A_11_ce0 <= compute_weights_with_matrix_mult_U0_A_11_ce0;
    A_11_ce1 <= ap_const_logic_0;
    A_11_d0 <= ap_const_lv128_lc_1;
    A_11_d1 <= ap_const_lv128_lc_1;
    A_11_we0 <= ap_const_logic_0;
    A_11_we1 <= ap_const_logic_0;
    A_12_address0 <= compute_weights_with_matrix_mult_U0_A_12_address0;
    A_12_address1 <= ap_const_lv5_0;
    A_12_ce0 <= compute_weights_with_matrix_mult_U0_A_12_ce0;
    A_12_ce1 <= ap_const_logic_0;
    A_12_d0 <= ap_const_lv128_lc_1;
    A_12_d1 <= ap_const_lv128_lc_1;
    A_12_we0 <= ap_const_logic_0;
    A_12_we1 <= ap_const_logic_0;
    A_13_address0 <= compute_weights_with_matrix_mult_U0_A_13_address0;
    A_13_address1 <= ap_const_lv5_0;
    A_13_ce0 <= compute_weights_with_matrix_mult_U0_A_13_ce0;
    A_13_ce1 <= ap_const_logic_0;
    A_13_d0 <= ap_const_lv128_lc_1;
    A_13_d1 <= ap_const_lv128_lc_1;
    A_13_we0 <= ap_const_logic_0;
    A_13_we1 <= ap_const_logic_0;
    A_14_address0 <= compute_weights_with_matrix_mult_U0_A_14_address0;
    A_14_address1 <= ap_const_lv5_0;
    A_14_ce0 <= compute_weights_with_matrix_mult_U0_A_14_ce0;
    A_14_ce1 <= ap_const_logic_0;
    A_14_d0 <= ap_const_lv128_lc_1;
    A_14_d1 <= ap_const_lv128_lc_1;
    A_14_we0 <= ap_const_logic_0;
    A_14_we1 <= ap_const_logic_0;
    A_15_address0 <= compute_weights_with_matrix_mult_U0_A_15_address0;
    A_15_address1 <= ap_const_lv5_0;
    A_15_ce0 <= compute_weights_with_matrix_mult_U0_A_15_ce0;
    A_15_ce1 <= ap_const_logic_0;
    A_15_d0 <= ap_const_lv128_lc_1;
    A_15_d1 <= ap_const_lv128_lc_1;
    A_15_we0 <= ap_const_logic_0;
    A_15_we1 <= ap_const_logic_0;
    A_16_address0 <= compute_weights_with_matrix_mult_U0_A_16_address0;
    A_16_address1 <= ap_const_lv5_0;
    A_16_ce0 <= compute_weights_with_matrix_mult_U0_A_16_ce0;
    A_16_ce1 <= ap_const_logic_0;
    A_16_d0 <= ap_const_lv128_lc_1;
    A_16_d1 <= ap_const_lv128_lc_1;
    A_16_we0 <= ap_const_logic_0;
    A_16_we1 <= ap_const_logic_0;
    A_17_address0 <= compute_weights_with_matrix_mult_U0_A_17_address0;
    A_17_address1 <= ap_const_lv5_0;
    A_17_ce0 <= compute_weights_with_matrix_mult_U0_A_17_ce0;
    A_17_ce1 <= ap_const_logic_0;
    A_17_d0 <= ap_const_lv128_lc_1;
    A_17_d1 <= ap_const_lv128_lc_1;
    A_17_we0 <= ap_const_logic_0;
    A_17_we1 <= ap_const_logic_0;
    A_18_address0 <= compute_weights_with_matrix_mult_U0_A_18_address0;
    A_18_address1 <= ap_const_lv5_0;
    A_18_ce0 <= compute_weights_with_matrix_mult_U0_A_18_ce0;
    A_18_ce1 <= ap_const_logic_0;
    A_18_d0 <= ap_const_lv128_lc_1;
    A_18_d1 <= ap_const_lv128_lc_1;
    A_18_we0 <= ap_const_logic_0;
    A_18_we1 <= ap_const_logic_0;
    A_19_address0 <= compute_weights_with_matrix_mult_U0_A_19_address0;
    A_19_address1 <= ap_const_lv5_0;
    A_19_ce0 <= compute_weights_with_matrix_mult_U0_A_19_ce0;
    A_19_ce1 <= ap_const_logic_0;
    A_19_d0 <= ap_const_lv128_lc_1;
    A_19_d1 <= ap_const_lv128_lc_1;
    A_19_we0 <= ap_const_logic_0;
    A_19_we1 <= ap_const_logic_0;
    A_1_address0 <= compute_weights_with_matrix_mult_U0_A_1_address0;
    A_1_address1 <= ap_const_lv5_0;
    A_1_ce0 <= compute_weights_with_matrix_mult_U0_A_1_ce0;
    A_1_ce1 <= ap_const_logic_0;
    A_1_d0 <= ap_const_lv128_lc_1;
    A_1_d1 <= ap_const_lv128_lc_1;
    A_1_we0 <= ap_const_logic_0;
    A_1_we1 <= ap_const_logic_0;
    A_20_address0 <= compute_weights_with_matrix_mult_U0_A_20_address0;
    A_20_address1 <= ap_const_lv5_0;
    A_20_ce0 <= compute_weights_with_matrix_mult_U0_A_20_ce0;
    A_20_ce1 <= ap_const_logic_0;
    A_20_d0 <= ap_const_lv128_lc_1;
    A_20_d1 <= ap_const_lv128_lc_1;
    A_20_we0 <= ap_const_logic_0;
    A_20_we1 <= ap_const_logic_0;
    A_21_address0 <= compute_weights_with_matrix_mult_U0_A_21_address0;
    A_21_address1 <= ap_const_lv5_0;
    A_21_ce0 <= compute_weights_with_matrix_mult_U0_A_21_ce0;
    A_21_ce1 <= ap_const_logic_0;
    A_21_d0 <= ap_const_lv128_lc_1;
    A_21_d1 <= ap_const_lv128_lc_1;
    A_21_we0 <= ap_const_logic_0;
    A_21_we1 <= ap_const_logic_0;
    A_22_address0 <= compute_weights_with_matrix_mult_U0_A_22_address0;
    A_22_address1 <= ap_const_lv5_0;
    A_22_ce0 <= compute_weights_with_matrix_mult_U0_A_22_ce0;
    A_22_ce1 <= ap_const_logic_0;
    A_22_d0 <= ap_const_lv128_lc_1;
    A_22_d1 <= ap_const_lv128_lc_1;
    A_22_we0 <= ap_const_logic_0;
    A_22_we1 <= ap_const_logic_0;
    A_23_address0 <= compute_weights_with_matrix_mult_U0_A_23_address0;
    A_23_address1 <= ap_const_lv5_0;
    A_23_ce0 <= compute_weights_with_matrix_mult_U0_A_23_ce0;
    A_23_ce1 <= ap_const_logic_0;
    A_23_d0 <= ap_const_lv128_lc_1;
    A_23_d1 <= ap_const_lv128_lc_1;
    A_23_we0 <= ap_const_logic_0;
    A_23_we1 <= ap_const_logic_0;
    A_24_address0 <= compute_weights_with_matrix_mult_U0_A_24_address0;
    A_24_address1 <= ap_const_lv5_0;
    A_24_ce0 <= compute_weights_with_matrix_mult_U0_A_24_ce0;
    A_24_ce1 <= ap_const_logic_0;
    A_24_d0 <= ap_const_lv128_lc_1;
    A_24_d1 <= ap_const_lv128_lc_1;
    A_24_we0 <= ap_const_logic_0;
    A_24_we1 <= ap_const_logic_0;
    A_25_address0 <= compute_weights_with_matrix_mult_U0_A_25_address0;
    A_25_address1 <= ap_const_lv5_0;
    A_25_ce0 <= compute_weights_with_matrix_mult_U0_A_25_ce0;
    A_25_ce1 <= ap_const_logic_0;
    A_25_d0 <= ap_const_lv128_lc_1;
    A_25_d1 <= ap_const_lv128_lc_1;
    A_25_we0 <= ap_const_logic_0;
    A_25_we1 <= ap_const_logic_0;
    A_26_address0 <= compute_weights_with_matrix_mult_U0_A_26_address0;
    A_26_address1 <= ap_const_lv5_0;
    A_26_ce0 <= compute_weights_with_matrix_mult_U0_A_26_ce0;
    A_26_ce1 <= ap_const_logic_0;
    A_26_d0 <= ap_const_lv128_lc_1;
    A_26_d1 <= ap_const_lv128_lc_1;
    A_26_we0 <= ap_const_logic_0;
    A_26_we1 <= ap_const_logic_0;
    A_27_address0 <= compute_weights_with_matrix_mult_U0_A_27_address0;
    A_27_address1 <= ap_const_lv5_0;
    A_27_ce0 <= compute_weights_with_matrix_mult_U0_A_27_ce0;
    A_27_ce1 <= ap_const_logic_0;
    A_27_d0 <= ap_const_lv128_lc_1;
    A_27_d1 <= ap_const_lv128_lc_1;
    A_27_we0 <= ap_const_logic_0;
    A_27_we1 <= ap_const_logic_0;
    A_28_address0 <= compute_weights_with_matrix_mult_U0_A_28_address0;
    A_28_address1 <= ap_const_lv5_0;
    A_28_ce0 <= compute_weights_with_matrix_mult_U0_A_28_ce0;
    A_28_ce1 <= ap_const_logic_0;
    A_28_d0 <= ap_const_lv128_lc_1;
    A_28_d1 <= ap_const_lv128_lc_1;
    A_28_we0 <= ap_const_logic_0;
    A_28_we1 <= ap_const_logic_0;
    A_29_address0 <= compute_weights_with_matrix_mult_U0_A_29_address0;
    A_29_address1 <= ap_const_lv5_0;
    A_29_ce0 <= compute_weights_with_matrix_mult_U0_A_29_ce0;
    A_29_ce1 <= ap_const_logic_0;
    A_29_d0 <= ap_const_lv128_lc_1;
    A_29_d1 <= ap_const_lv128_lc_1;
    A_29_we0 <= ap_const_logic_0;
    A_29_we1 <= ap_const_logic_0;
    A_2_address0 <= compute_weights_with_matrix_mult_U0_A_2_address0;
    A_2_address1 <= ap_const_lv5_0;
    A_2_ce0 <= compute_weights_with_matrix_mult_U0_A_2_ce0;
    A_2_ce1 <= ap_const_logic_0;
    A_2_d0 <= ap_const_lv128_lc_1;
    A_2_d1 <= ap_const_lv128_lc_1;
    A_2_we0 <= ap_const_logic_0;
    A_2_we1 <= ap_const_logic_0;
    A_30_address0 <= compute_weights_with_matrix_mult_U0_A_30_address0;
    A_30_address1 <= ap_const_lv5_0;
    A_30_ce0 <= compute_weights_with_matrix_mult_U0_A_30_ce0;
    A_30_ce1 <= ap_const_logic_0;
    A_30_d0 <= ap_const_lv128_lc_1;
    A_30_d1 <= ap_const_lv128_lc_1;
    A_30_we0 <= ap_const_logic_0;
    A_30_we1 <= ap_const_logic_0;
    A_31_address0 <= compute_weights_with_matrix_mult_U0_A_31_address0;
    A_31_address1 <= ap_const_lv5_0;
    A_31_ce0 <= compute_weights_with_matrix_mult_U0_A_31_ce0;
    A_31_ce1 <= ap_const_logic_0;
    A_31_d0 <= ap_const_lv128_lc_1;
    A_31_d1 <= ap_const_lv128_lc_1;
    A_31_we0 <= ap_const_logic_0;
    A_31_we1 <= ap_const_logic_0;
    A_3_address0 <= compute_weights_with_matrix_mult_U0_A_3_address0;
    A_3_address1 <= ap_const_lv5_0;
    A_3_ce0 <= compute_weights_with_matrix_mult_U0_A_3_ce0;
    A_3_ce1 <= ap_const_logic_0;
    A_3_d0 <= ap_const_lv128_lc_1;
    A_3_d1 <= ap_const_lv128_lc_1;
    A_3_we0 <= ap_const_logic_0;
    A_3_we1 <= ap_const_logic_0;
    A_4_address0 <= compute_weights_with_matrix_mult_U0_A_4_address0;
    A_4_address1 <= ap_const_lv5_0;
    A_4_ce0 <= compute_weights_with_matrix_mult_U0_A_4_ce0;
    A_4_ce1 <= ap_const_logic_0;
    A_4_d0 <= ap_const_lv128_lc_1;
    A_4_d1 <= ap_const_lv128_lc_1;
    A_4_we0 <= ap_const_logic_0;
    A_4_we1 <= ap_const_logic_0;
    A_5_address0 <= compute_weights_with_matrix_mult_U0_A_5_address0;
    A_5_address1 <= ap_const_lv5_0;
    A_5_ce0 <= compute_weights_with_matrix_mult_U0_A_5_ce0;
    A_5_ce1 <= ap_const_logic_0;
    A_5_d0 <= ap_const_lv128_lc_1;
    A_5_d1 <= ap_const_lv128_lc_1;
    A_5_we0 <= ap_const_logic_0;
    A_5_we1 <= ap_const_logic_0;
    A_6_address0 <= compute_weights_with_matrix_mult_U0_A_6_address0;
    A_6_address1 <= ap_const_lv5_0;
    A_6_ce0 <= compute_weights_with_matrix_mult_U0_A_6_ce0;
    A_6_ce1 <= ap_const_logic_0;
    A_6_d0 <= ap_const_lv128_lc_1;
    A_6_d1 <= ap_const_lv128_lc_1;
    A_6_we0 <= ap_const_logic_0;
    A_6_we1 <= ap_const_logic_0;
    A_7_address0 <= compute_weights_with_matrix_mult_U0_A_7_address0;
    A_7_address1 <= ap_const_lv5_0;
    A_7_ce0 <= compute_weights_with_matrix_mult_U0_A_7_ce0;
    A_7_ce1 <= ap_const_logic_0;
    A_7_d0 <= ap_const_lv128_lc_1;
    A_7_d1 <= ap_const_lv128_lc_1;
    A_7_we0 <= ap_const_logic_0;
    A_7_we1 <= ap_const_logic_0;
    A_8_address0 <= compute_weights_with_matrix_mult_U0_A_8_address0;
    A_8_address1 <= ap_const_lv5_0;
    A_8_ce0 <= compute_weights_with_matrix_mult_U0_A_8_ce0;
    A_8_ce1 <= ap_const_logic_0;
    A_8_d0 <= ap_const_lv128_lc_1;
    A_8_d1 <= ap_const_lv128_lc_1;
    A_8_we0 <= ap_const_logic_0;
    A_8_we1 <= ap_const_logic_0;
    A_9_address0 <= compute_weights_with_matrix_mult_U0_A_9_address0;
    A_9_address1 <= ap_const_lv5_0;
    A_9_ce0 <= compute_weights_with_matrix_mult_U0_A_9_ce0;
    A_9_ce1 <= ap_const_logic_0;
    A_9_d0 <= ap_const_lv128_lc_1;
    A_9_d1 <= ap_const_lv128_lc_1;
    A_9_we0 <= ap_const_logic_0;
    A_9_we1 <= ap_const_logic_0;
    B_0_address0 <= compute_weights_with_matrix_mult_U0_B_0_address0;
    B_0_address1 <= compute_biases_with_multiple_dot_products_U0_B_0_address1;
    B_0_ce0 <= compute_weights_with_matrix_mult_U0_B_0_ce0;
    B_0_ce1 <= compute_biases_with_multiple_dot_products_U0_B_0_ce1;
    B_0_d0 <= ap_const_lv128_lc_1;
    B_0_d1 <= ap_const_lv128_lc_1;
    B_0_we0 <= ap_const_logic_0;
    B_0_we1 <= ap_const_logic_0;
    B_10_address0 <= compute_weights_with_matrix_mult_U0_B_10_address0;
    B_10_address1 <= compute_biases_with_multiple_dot_products_U0_B_10_address1;
    B_10_ce0 <= compute_weights_with_matrix_mult_U0_B_10_ce0;
    B_10_ce1 <= compute_biases_with_multiple_dot_products_U0_B_10_ce1;
    B_10_d0 <= ap_const_lv128_lc_1;
    B_10_d1 <= ap_const_lv128_lc_1;
    B_10_we0 <= ap_const_logic_0;
    B_10_we1 <= ap_const_logic_0;
    B_11_address0 <= compute_weights_with_matrix_mult_U0_B_11_address0;
    B_11_address1 <= compute_biases_with_multiple_dot_products_U0_B_11_address1;
    B_11_ce0 <= compute_weights_with_matrix_mult_U0_B_11_ce0;
    B_11_ce1 <= compute_biases_with_multiple_dot_products_U0_B_11_ce1;
    B_11_d0 <= ap_const_lv128_lc_1;
    B_11_d1 <= ap_const_lv128_lc_1;
    B_11_we0 <= ap_const_logic_0;
    B_11_we1 <= ap_const_logic_0;
    B_12_address0 <= compute_weights_with_matrix_mult_U0_B_12_address0;
    B_12_address1 <= compute_biases_with_multiple_dot_products_U0_B_12_address1;
    B_12_ce0 <= compute_weights_with_matrix_mult_U0_B_12_ce0;
    B_12_ce1 <= compute_biases_with_multiple_dot_products_U0_B_12_ce1;
    B_12_d0 <= ap_const_lv128_lc_1;
    B_12_d1 <= ap_const_lv128_lc_1;
    B_12_we0 <= ap_const_logic_0;
    B_12_we1 <= ap_const_logic_0;
    B_13_address0 <= compute_weights_with_matrix_mult_U0_B_13_address0;
    B_13_address1 <= compute_biases_with_multiple_dot_products_U0_B_13_address1;
    B_13_ce0 <= compute_weights_with_matrix_mult_U0_B_13_ce0;
    B_13_ce1 <= compute_biases_with_multiple_dot_products_U0_B_13_ce1;
    B_13_d0 <= ap_const_lv128_lc_1;
    B_13_d1 <= ap_const_lv128_lc_1;
    B_13_we0 <= ap_const_logic_0;
    B_13_we1 <= ap_const_logic_0;
    B_14_address0 <= compute_weights_with_matrix_mult_U0_B_14_address0;
    B_14_address1 <= compute_biases_with_multiple_dot_products_U0_B_14_address1;
    B_14_ce0 <= compute_weights_with_matrix_mult_U0_B_14_ce0;
    B_14_ce1 <= compute_biases_with_multiple_dot_products_U0_B_14_ce1;
    B_14_d0 <= ap_const_lv128_lc_1;
    B_14_d1 <= ap_const_lv128_lc_1;
    B_14_we0 <= ap_const_logic_0;
    B_14_we1 <= ap_const_logic_0;
    B_15_address0 <= compute_weights_with_matrix_mult_U0_B_15_address0;
    B_15_address1 <= compute_biases_with_multiple_dot_products_U0_B_15_address1;
    B_15_ce0 <= compute_weights_with_matrix_mult_U0_B_15_ce0;
    B_15_ce1 <= compute_biases_with_multiple_dot_products_U0_B_15_ce1;
    B_15_d0 <= ap_const_lv128_lc_1;
    B_15_d1 <= ap_const_lv128_lc_1;
    B_15_we0 <= ap_const_logic_0;
    B_15_we1 <= ap_const_logic_0;
    B_16_address0 <= compute_weights_with_matrix_mult_U0_B_16_address0;
    B_16_address1 <= compute_biases_with_multiple_dot_products_U0_B_16_address1;
    B_16_ce0 <= compute_weights_with_matrix_mult_U0_B_16_ce0;
    B_16_ce1 <= compute_biases_with_multiple_dot_products_U0_B_16_ce1;
    B_16_d0 <= ap_const_lv128_lc_1;
    B_16_d1 <= ap_const_lv128_lc_1;
    B_16_we0 <= ap_const_logic_0;
    B_16_we1 <= ap_const_logic_0;
    B_17_address0 <= compute_weights_with_matrix_mult_U0_B_17_address0;
    B_17_address1 <= compute_biases_with_multiple_dot_products_U0_B_17_address1;
    B_17_ce0 <= compute_weights_with_matrix_mult_U0_B_17_ce0;
    B_17_ce1 <= compute_biases_with_multiple_dot_products_U0_B_17_ce1;
    B_17_d0 <= ap_const_lv128_lc_1;
    B_17_d1 <= ap_const_lv128_lc_1;
    B_17_we0 <= ap_const_logic_0;
    B_17_we1 <= ap_const_logic_0;
    B_18_address0 <= compute_weights_with_matrix_mult_U0_B_18_address0;
    B_18_address1 <= compute_biases_with_multiple_dot_products_U0_B_18_address1;
    B_18_ce0 <= compute_weights_with_matrix_mult_U0_B_18_ce0;
    B_18_ce1 <= compute_biases_with_multiple_dot_products_U0_B_18_ce1;
    B_18_d0 <= ap_const_lv128_lc_1;
    B_18_d1 <= ap_const_lv128_lc_1;
    B_18_we0 <= ap_const_logic_0;
    B_18_we1 <= ap_const_logic_0;
    B_19_address0 <= compute_weights_with_matrix_mult_U0_B_19_address0;
    B_19_address1 <= compute_biases_with_multiple_dot_products_U0_B_19_address1;
    B_19_ce0 <= compute_weights_with_matrix_mult_U0_B_19_ce0;
    B_19_ce1 <= compute_biases_with_multiple_dot_products_U0_B_19_ce1;
    B_19_d0 <= ap_const_lv128_lc_1;
    B_19_d1 <= ap_const_lv128_lc_1;
    B_19_we0 <= ap_const_logic_0;
    B_19_we1 <= ap_const_logic_0;
    B_1_address0 <= compute_weights_with_matrix_mult_U0_B_1_address0;
    B_1_address1 <= compute_biases_with_multiple_dot_products_U0_B_1_address1;
    B_1_ce0 <= compute_weights_with_matrix_mult_U0_B_1_ce0;
    B_1_ce1 <= compute_biases_with_multiple_dot_products_U0_B_1_ce1;
    B_1_d0 <= ap_const_lv128_lc_1;
    B_1_d1 <= ap_const_lv128_lc_1;
    B_1_we0 <= ap_const_logic_0;
    B_1_we1 <= ap_const_logic_0;
    B_20_address0 <= compute_weights_with_matrix_mult_U0_B_20_address0;
    B_20_address1 <= compute_biases_with_multiple_dot_products_U0_B_20_address1;
    B_20_ce0 <= compute_weights_with_matrix_mult_U0_B_20_ce0;
    B_20_ce1 <= compute_biases_with_multiple_dot_products_U0_B_20_ce1;
    B_20_d0 <= ap_const_lv128_lc_1;
    B_20_d1 <= ap_const_lv128_lc_1;
    B_20_we0 <= ap_const_logic_0;
    B_20_we1 <= ap_const_logic_0;
    B_21_address0 <= compute_weights_with_matrix_mult_U0_B_21_address0;
    B_21_address1 <= compute_biases_with_multiple_dot_products_U0_B_21_address1;
    B_21_ce0 <= compute_weights_with_matrix_mult_U0_B_21_ce0;
    B_21_ce1 <= compute_biases_with_multiple_dot_products_U0_B_21_ce1;
    B_21_d0 <= ap_const_lv128_lc_1;
    B_21_d1 <= ap_const_lv128_lc_1;
    B_21_we0 <= ap_const_logic_0;
    B_21_we1 <= ap_const_logic_0;
    B_22_address0 <= compute_weights_with_matrix_mult_U0_B_22_address0;
    B_22_address1 <= compute_biases_with_multiple_dot_products_U0_B_22_address1;
    B_22_ce0 <= compute_weights_with_matrix_mult_U0_B_22_ce0;
    B_22_ce1 <= compute_biases_with_multiple_dot_products_U0_B_22_ce1;
    B_22_d0 <= ap_const_lv128_lc_1;
    B_22_d1 <= ap_const_lv128_lc_1;
    B_22_we0 <= ap_const_logic_0;
    B_22_we1 <= ap_const_logic_0;
    B_23_address0 <= compute_weights_with_matrix_mult_U0_B_23_address0;
    B_23_address1 <= compute_biases_with_multiple_dot_products_U0_B_23_address1;
    B_23_ce0 <= compute_weights_with_matrix_mult_U0_B_23_ce0;
    B_23_ce1 <= compute_biases_with_multiple_dot_products_U0_B_23_ce1;
    B_23_d0 <= ap_const_lv128_lc_1;
    B_23_d1 <= ap_const_lv128_lc_1;
    B_23_we0 <= ap_const_logic_0;
    B_23_we1 <= ap_const_logic_0;
    B_24_address0 <= compute_weights_with_matrix_mult_U0_B_24_address0;
    B_24_address1 <= compute_biases_with_multiple_dot_products_U0_B_24_address1;
    B_24_ce0 <= compute_weights_with_matrix_mult_U0_B_24_ce0;
    B_24_ce1 <= compute_biases_with_multiple_dot_products_U0_B_24_ce1;
    B_24_d0 <= ap_const_lv128_lc_1;
    B_24_d1 <= ap_const_lv128_lc_1;
    B_24_we0 <= ap_const_logic_0;
    B_24_we1 <= ap_const_logic_0;
    B_25_address0 <= compute_weights_with_matrix_mult_U0_B_25_address0;
    B_25_address1 <= compute_biases_with_multiple_dot_products_U0_B_25_address1;
    B_25_ce0 <= compute_weights_with_matrix_mult_U0_B_25_ce0;
    B_25_ce1 <= compute_biases_with_multiple_dot_products_U0_B_25_ce1;
    B_25_d0 <= ap_const_lv128_lc_1;
    B_25_d1 <= ap_const_lv128_lc_1;
    B_25_we0 <= ap_const_logic_0;
    B_25_we1 <= ap_const_logic_0;
    B_26_address0 <= compute_weights_with_matrix_mult_U0_B_26_address0;
    B_26_address1 <= compute_biases_with_multiple_dot_products_U0_B_26_address1;
    B_26_ce0 <= compute_weights_with_matrix_mult_U0_B_26_ce0;
    B_26_ce1 <= compute_biases_with_multiple_dot_products_U0_B_26_ce1;
    B_26_d0 <= ap_const_lv128_lc_1;
    B_26_d1 <= ap_const_lv128_lc_1;
    B_26_we0 <= ap_const_logic_0;
    B_26_we1 <= ap_const_logic_0;
    B_27_address0 <= compute_weights_with_matrix_mult_U0_B_27_address0;
    B_27_address1 <= compute_biases_with_multiple_dot_products_U0_B_27_address1;
    B_27_ce0 <= compute_weights_with_matrix_mult_U0_B_27_ce0;
    B_27_ce1 <= compute_biases_with_multiple_dot_products_U0_B_27_ce1;
    B_27_d0 <= ap_const_lv128_lc_1;
    B_27_d1 <= ap_const_lv128_lc_1;
    B_27_we0 <= ap_const_logic_0;
    B_27_we1 <= ap_const_logic_0;
    B_28_address0 <= compute_weights_with_matrix_mult_U0_B_28_address0;
    B_28_address1 <= compute_biases_with_multiple_dot_products_U0_B_28_address1;
    B_28_ce0 <= compute_weights_with_matrix_mult_U0_B_28_ce0;
    B_28_ce1 <= compute_biases_with_multiple_dot_products_U0_B_28_ce1;
    B_28_d0 <= ap_const_lv128_lc_1;
    B_28_d1 <= ap_const_lv128_lc_1;
    B_28_we0 <= ap_const_logic_0;
    B_28_we1 <= ap_const_logic_0;
    B_29_address0 <= compute_weights_with_matrix_mult_U0_B_29_address0;
    B_29_address1 <= compute_biases_with_multiple_dot_products_U0_B_29_address1;
    B_29_ce0 <= compute_weights_with_matrix_mult_U0_B_29_ce0;
    B_29_ce1 <= compute_biases_with_multiple_dot_products_U0_B_29_ce1;
    B_29_d0 <= ap_const_lv128_lc_1;
    B_29_d1 <= ap_const_lv128_lc_1;
    B_29_we0 <= ap_const_logic_0;
    B_29_we1 <= ap_const_logic_0;
    B_2_address0 <= compute_weights_with_matrix_mult_U0_B_2_address0;
    B_2_address1 <= compute_biases_with_multiple_dot_products_U0_B_2_address1;
    B_2_ce0 <= compute_weights_with_matrix_mult_U0_B_2_ce0;
    B_2_ce1 <= compute_biases_with_multiple_dot_products_U0_B_2_ce1;
    B_2_d0 <= ap_const_lv128_lc_1;
    B_2_d1 <= ap_const_lv128_lc_1;
    B_2_we0 <= ap_const_logic_0;
    B_2_we1 <= ap_const_logic_0;
    B_30_address0 <= compute_weights_with_matrix_mult_U0_B_30_address0;
    B_30_address1 <= compute_biases_with_multiple_dot_products_U0_B_30_address1;
    B_30_ce0 <= compute_weights_with_matrix_mult_U0_B_30_ce0;
    B_30_ce1 <= compute_biases_with_multiple_dot_products_U0_B_30_ce1;
    B_30_d0 <= ap_const_lv128_lc_1;
    B_30_d1 <= ap_const_lv128_lc_1;
    B_30_we0 <= ap_const_logic_0;
    B_30_we1 <= ap_const_logic_0;
    B_31_address0 <= compute_weights_with_matrix_mult_U0_B_31_address0;
    B_31_address1 <= compute_biases_with_multiple_dot_products_U0_B_31_address1;
    B_31_ce0 <= compute_weights_with_matrix_mult_U0_B_31_ce0;
    B_31_ce1 <= compute_biases_with_multiple_dot_products_U0_B_31_ce1;
    B_31_d0 <= ap_const_lv128_lc_1;
    B_31_d1 <= ap_const_lv128_lc_1;
    B_31_we0 <= ap_const_logic_0;
    B_31_we1 <= ap_const_logic_0;
    B_3_address0 <= compute_weights_with_matrix_mult_U0_B_3_address0;
    B_3_address1 <= compute_biases_with_multiple_dot_products_U0_B_3_address1;
    B_3_ce0 <= compute_weights_with_matrix_mult_U0_B_3_ce0;
    B_3_ce1 <= compute_biases_with_multiple_dot_products_U0_B_3_ce1;
    B_3_d0 <= ap_const_lv128_lc_1;
    B_3_d1 <= ap_const_lv128_lc_1;
    B_3_we0 <= ap_const_logic_0;
    B_3_we1 <= ap_const_logic_0;
    B_4_address0 <= compute_weights_with_matrix_mult_U0_B_4_address0;
    B_4_address1 <= compute_biases_with_multiple_dot_products_U0_B_4_address1;
    B_4_ce0 <= compute_weights_with_matrix_mult_U0_B_4_ce0;
    B_4_ce1 <= compute_biases_with_multiple_dot_products_U0_B_4_ce1;
    B_4_d0 <= ap_const_lv128_lc_1;
    B_4_d1 <= ap_const_lv128_lc_1;
    B_4_we0 <= ap_const_logic_0;
    B_4_we1 <= ap_const_logic_0;
    B_5_address0 <= compute_weights_with_matrix_mult_U0_B_5_address0;
    B_5_address1 <= compute_biases_with_multiple_dot_products_U0_B_5_address1;
    B_5_ce0 <= compute_weights_with_matrix_mult_U0_B_5_ce0;
    B_5_ce1 <= compute_biases_with_multiple_dot_products_U0_B_5_ce1;
    B_5_d0 <= ap_const_lv128_lc_1;
    B_5_d1 <= ap_const_lv128_lc_1;
    B_5_we0 <= ap_const_logic_0;
    B_5_we1 <= ap_const_logic_0;
    B_6_address0 <= compute_weights_with_matrix_mult_U0_B_6_address0;
    B_6_address1 <= compute_biases_with_multiple_dot_products_U0_B_6_address1;
    B_6_ce0 <= compute_weights_with_matrix_mult_U0_B_6_ce0;
    B_6_ce1 <= compute_biases_with_multiple_dot_products_U0_B_6_ce1;
    B_6_d0 <= ap_const_lv128_lc_1;
    B_6_d1 <= ap_const_lv128_lc_1;
    B_6_we0 <= ap_const_logic_0;
    B_6_we1 <= ap_const_logic_0;
    B_7_address0 <= compute_weights_with_matrix_mult_U0_B_7_address0;
    B_7_address1 <= compute_biases_with_multiple_dot_products_U0_B_7_address1;
    B_7_ce0 <= compute_weights_with_matrix_mult_U0_B_7_ce0;
    B_7_ce1 <= compute_biases_with_multiple_dot_products_U0_B_7_ce1;
    B_7_d0 <= ap_const_lv128_lc_1;
    B_7_d1 <= ap_const_lv128_lc_1;
    B_7_we0 <= ap_const_logic_0;
    B_7_we1 <= ap_const_logic_0;
    B_8_address0 <= compute_weights_with_matrix_mult_U0_B_8_address0;
    B_8_address1 <= compute_biases_with_multiple_dot_products_U0_B_8_address1;
    B_8_ce0 <= compute_weights_with_matrix_mult_U0_B_8_ce0;
    B_8_ce1 <= compute_biases_with_multiple_dot_products_U0_B_8_ce1;
    B_8_d0 <= ap_const_lv128_lc_1;
    B_8_d1 <= ap_const_lv128_lc_1;
    B_8_we0 <= ap_const_logic_0;
    B_8_we1 <= ap_const_logic_0;
    B_9_address0 <= compute_weights_with_matrix_mult_U0_B_9_address0;
    B_9_address1 <= compute_biases_with_multiple_dot_products_U0_B_9_address1;
    B_9_ce0 <= compute_weights_with_matrix_mult_U0_B_9_ce0;
    B_9_ce1 <= compute_biases_with_multiple_dot_products_U0_B_9_ce1;
    B_9_d0 <= ap_const_lv128_lc_1;
    B_9_d1 <= ap_const_lv128_lc_1;
    B_9_we0 <= ap_const_logic_0;
    B_9_we1 <= ap_const_logic_0;
    ap_channel_done_W_V_0 <= ((ap_sync_reg_channel_write_W_V_0 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_1 <= ((ap_sync_reg_channel_write_W_V_1 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_10 <= ((ap_sync_reg_channel_write_W_V_10 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_11 <= ((ap_sync_reg_channel_write_W_V_11 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_12 <= ((ap_sync_reg_channel_write_W_V_12 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_13 <= ((ap_sync_reg_channel_write_W_V_13 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_14 <= ((ap_sync_reg_channel_write_W_V_14 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_15 <= ((ap_sync_reg_channel_write_W_V_15 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_16 <= ((ap_sync_reg_channel_write_W_V_16 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_17 <= ((ap_sync_reg_channel_write_W_V_17 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_18 <= ((ap_sync_reg_channel_write_W_V_18 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_19 <= ((ap_sync_reg_channel_write_W_V_19 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_2 <= ((ap_sync_reg_channel_write_W_V_2 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_20 <= ((ap_sync_reg_channel_write_W_V_20 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_21 <= ((ap_sync_reg_channel_write_W_V_21 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_22 <= ((ap_sync_reg_channel_write_W_V_22 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_23 <= ((ap_sync_reg_channel_write_W_V_23 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_24 <= ((ap_sync_reg_channel_write_W_V_24 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_25 <= ((ap_sync_reg_channel_write_W_V_25 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_26 <= ((ap_sync_reg_channel_write_W_V_26 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_27 <= ((ap_sync_reg_channel_write_W_V_27 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_28 <= ((ap_sync_reg_channel_write_W_V_28 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_29 <= ((ap_sync_reg_channel_write_W_V_29 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_3 <= ((ap_sync_reg_channel_write_W_V_3 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_30 <= ((ap_sync_reg_channel_write_W_V_30 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_31 <= ((ap_sync_reg_channel_write_W_V_31 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_4 <= ((ap_sync_reg_channel_write_W_V_4 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_5 <= ((ap_sync_reg_channel_write_W_V_5 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_6 <= ((ap_sync_reg_channel_write_W_V_6 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_7 <= ((ap_sync_reg_channel_write_W_V_7 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_8 <= ((ap_sync_reg_channel_write_W_V_8 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_channel_done_W_V_9 <= ((ap_sync_reg_channel_write_W_V_9 xor ap_const_logic_1) and compute_weights_with_matrix_mult_U0_ap_done);
    ap_done <= ap_sync_done;
    ap_idle <= ((ap_const_logic_1 xor W_V_31_t_empty_n) and (ap_const_logic_1 xor W_V_30_t_empty_n) and (ap_const_logic_1 xor W_V_29_t_empty_n) and (ap_const_logic_1 xor W_V_28_t_empty_n) and (ap_const_logic_1 xor W_V_27_t_empty_n) and (ap_const_logic_1 xor W_V_26_t_empty_n) and (ap_const_logic_1 xor W_V_25_t_empty_n) and (ap_const_logic_1 xor W_V_24_t_empty_n) and (ap_const_logic_1 xor W_V_23_t_empty_n) and (ap_const_logic_1 xor W_V_22_t_empty_n) and (ap_const_logic_1 xor W_V_21_t_empty_n) and (ap_const_logic_1 xor W_V_20_t_empty_n) and (ap_const_logic_1 xor W_V_19_t_empty_n) and (ap_const_logic_1 xor W_V_18_t_empty_n) and (ap_const_logic_1 xor W_V_17_t_empty_n) and (ap_const_logic_1 xor W_V_16_t_empty_n) and (ap_const_logic_1 xor W_V_15_t_empty_n) and (ap_const_logic_1 xor W_V_14_t_empty_n) and (ap_const_logic_1 xor W_V_13_t_empty_n) and (ap_const_logic_1 xor W_V_12_t_empty_n) and (ap_const_logic_1 xor W_V_11_t_empty_n) and (ap_const_logic_1 xor W_V_10_t_empty_n) and (ap_const_logic_1 xor W_V_9_t_empty_n) and (ap_const_logic_1 xor W_V_8_t_empty_n) and (ap_const_logic_1 xor W_V_7_t_empty_n) and (ap_const_logic_1 xor W_V_6_t_empty_n) and (ap_const_logic_1 xor W_V_5_t_empty_n) and (ap_const_logic_1 xor W_V_4_t_empty_n) and (ap_const_logic_1 xor W_V_3_t_empty_n) and (ap_const_logic_1 xor W_V_2_t_empty_n) and (ap_const_logic_1 xor W_V_1_t_empty_n) and (ap_const_logic_1 xor W_V_0_t_empty_n) and compute_weights_with_matrix_mult_U0_ap_idle and compute_scores_U0_ap_idle and compute_biases_with_multiple_dot_products_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_channel_write_W_V_0 <= ((compute_weights_with_matrix_mult_U0_W_V_0_full_n and ap_channel_done_W_V_0) or ap_sync_reg_channel_write_W_V_0);
    ap_sync_channel_write_W_V_1 <= ((compute_weights_with_matrix_mult_U0_W_V_1_full_n and ap_channel_done_W_V_1) or ap_sync_reg_channel_write_W_V_1);
    ap_sync_channel_write_W_V_10 <= ((compute_weights_with_matrix_mult_U0_W_V_10_full_n and ap_channel_done_W_V_10) or ap_sync_reg_channel_write_W_V_10);
    ap_sync_channel_write_W_V_11 <= ((compute_weights_with_matrix_mult_U0_W_V_11_full_n and ap_channel_done_W_V_11) or ap_sync_reg_channel_write_W_V_11);
    ap_sync_channel_write_W_V_12 <= ((compute_weights_with_matrix_mult_U0_W_V_12_full_n and ap_channel_done_W_V_12) or ap_sync_reg_channel_write_W_V_12);
    ap_sync_channel_write_W_V_13 <= ((compute_weights_with_matrix_mult_U0_W_V_13_full_n and ap_channel_done_W_V_13) or ap_sync_reg_channel_write_W_V_13);
    ap_sync_channel_write_W_V_14 <= ((compute_weights_with_matrix_mult_U0_W_V_14_full_n and ap_channel_done_W_V_14) or ap_sync_reg_channel_write_W_V_14);
    ap_sync_channel_write_W_V_15 <= ((compute_weights_with_matrix_mult_U0_W_V_15_full_n and ap_channel_done_W_V_15) or ap_sync_reg_channel_write_W_V_15);
    ap_sync_channel_write_W_V_16 <= ((compute_weights_with_matrix_mult_U0_W_V_16_full_n and ap_channel_done_W_V_16) or ap_sync_reg_channel_write_W_V_16);
    ap_sync_channel_write_W_V_17 <= ((compute_weights_with_matrix_mult_U0_W_V_17_full_n and ap_channel_done_W_V_17) or ap_sync_reg_channel_write_W_V_17);
    ap_sync_channel_write_W_V_18 <= ((compute_weights_with_matrix_mult_U0_W_V_18_full_n and ap_channel_done_W_V_18) or ap_sync_reg_channel_write_W_V_18);
    ap_sync_channel_write_W_V_19 <= ((compute_weights_with_matrix_mult_U0_W_V_19_full_n and ap_channel_done_W_V_19) or ap_sync_reg_channel_write_W_V_19);
    ap_sync_channel_write_W_V_2 <= ((compute_weights_with_matrix_mult_U0_W_V_2_full_n and ap_channel_done_W_V_2) or ap_sync_reg_channel_write_W_V_2);
    ap_sync_channel_write_W_V_20 <= ((compute_weights_with_matrix_mult_U0_W_V_20_full_n and ap_channel_done_W_V_20) or ap_sync_reg_channel_write_W_V_20);
    ap_sync_channel_write_W_V_21 <= ((compute_weights_with_matrix_mult_U0_W_V_21_full_n and ap_channel_done_W_V_21) or ap_sync_reg_channel_write_W_V_21);
    ap_sync_channel_write_W_V_22 <= ((compute_weights_with_matrix_mult_U0_W_V_22_full_n and ap_channel_done_W_V_22) or ap_sync_reg_channel_write_W_V_22);
    ap_sync_channel_write_W_V_23 <= ((compute_weights_with_matrix_mult_U0_W_V_23_full_n and ap_channel_done_W_V_23) or ap_sync_reg_channel_write_W_V_23);
    ap_sync_channel_write_W_V_24 <= ((compute_weights_with_matrix_mult_U0_W_V_24_full_n and ap_channel_done_W_V_24) or ap_sync_reg_channel_write_W_V_24);
    ap_sync_channel_write_W_V_25 <= ((compute_weights_with_matrix_mult_U0_W_V_25_full_n and ap_channel_done_W_V_25) or ap_sync_reg_channel_write_W_V_25);
    ap_sync_channel_write_W_V_26 <= ((compute_weights_with_matrix_mult_U0_W_V_26_full_n and ap_channel_done_W_V_26) or ap_sync_reg_channel_write_W_V_26);
    ap_sync_channel_write_W_V_27 <= ((compute_weights_with_matrix_mult_U0_W_V_27_full_n and ap_channel_done_W_V_27) or ap_sync_reg_channel_write_W_V_27);
    ap_sync_channel_write_W_V_28 <= ((compute_weights_with_matrix_mult_U0_W_V_28_full_n and ap_channel_done_W_V_28) or ap_sync_reg_channel_write_W_V_28);
    ap_sync_channel_write_W_V_29 <= ((compute_weights_with_matrix_mult_U0_W_V_29_full_n and ap_channel_done_W_V_29) or ap_sync_reg_channel_write_W_V_29);
    ap_sync_channel_write_W_V_3 <= ((compute_weights_with_matrix_mult_U0_W_V_3_full_n and ap_channel_done_W_V_3) or ap_sync_reg_channel_write_W_V_3);
    ap_sync_channel_write_W_V_30 <= ((compute_weights_with_matrix_mult_U0_W_V_30_full_n and ap_channel_done_W_V_30) or ap_sync_reg_channel_write_W_V_30);
    ap_sync_channel_write_W_V_31 <= ((compute_weights_with_matrix_mult_U0_W_V_31_full_n and ap_channel_done_W_V_31) or ap_sync_reg_channel_write_W_V_31);
    ap_sync_channel_write_W_V_4 <= ((compute_weights_with_matrix_mult_U0_W_V_4_full_n and ap_channel_done_W_V_4) or ap_sync_reg_channel_write_W_V_4);
    ap_sync_channel_write_W_V_5 <= ((compute_weights_with_matrix_mult_U0_W_V_5_full_n and ap_channel_done_W_V_5) or ap_sync_reg_channel_write_W_V_5);
    ap_sync_channel_write_W_V_6 <= ((compute_weights_with_matrix_mult_U0_W_V_6_full_n and ap_channel_done_W_V_6) or ap_sync_reg_channel_write_W_V_6);
    ap_sync_channel_write_W_V_7 <= ((compute_weights_with_matrix_mult_U0_W_V_7_full_n and ap_channel_done_W_V_7) or ap_sync_reg_channel_write_W_V_7);
    ap_sync_channel_write_W_V_8 <= ((compute_weights_with_matrix_mult_U0_W_V_8_full_n and ap_channel_done_W_V_8) or ap_sync_reg_channel_write_W_V_8);
    ap_sync_channel_write_W_V_9 <= ((compute_weights_with_matrix_mult_U0_W_V_9_full_n and ap_channel_done_W_V_9) or ap_sync_reg_channel_write_W_V_9);
    ap_sync_compute_biases_with_multiple_dot_products_U0_ap_ready <= (compute_biases_with_multiple_dot_products_U0_ap_ready or ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready);
    ap_sync_compute_scores_U0_ap_ready <= (compute_scores_U0_ap_ready or ap_sync_reg_compute_scores_U0_ap_ready);
    ap_sync_compute_weights_with_matrix_mult_U0_ap_ready <= (compute_weights_with_matrix_mult_U0_ap_ready or ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (compute_scores_U0_ap_done and compute_biases_with_multiple_dot_products_U0_ap_done);
    ap_sync_ready <= (ap_sync_compute_weights_with_matrix_mult_U0_ap_ready and ap_sync_compute_scores_U0_ap_ready and ap_sync_compute_biases_with_multiple_dot_products_U0_ap_ready);
    compute_biases_with_multiple_dot_products_U0_ap_continue <= ap_sync_continue;
    compute_biases_with_multiple_dot_products_U0_ap_start <= ((ap_sync_reg_compute_biases_with_multiple_dot_products_U0_ap_ready xor ap_const_logic_1) and ap_start and W_V_9_t_empty_n and W_V_8_t_empty_n and W_V_7_t_empty_n and W_V_6_t_empty_n and W_V_5_t_empty_n and W_V_4_t_empty_n and W_V_3_t_empty_n and W_V_31_t_empty_n and W_V_30_t_empty_n and W_V_2_t_empty_n and W_V_29_t_empty_n and W_V_28_t_empty_n and W_V_27_t_empty_n and W_V_26_t_empty_n and W_V_25_t_empty_n and W_V_24_t_empty_n and W_V_23_t_empty_n and W_V_22_t_empty_n and W_V_21_t_empty_n and W_V_20_t_empty_n and W_V_1_t_empty_n and W_V_19_t_empty_n and W_V_18_t_empty_n and W_V_17_t_empty_n and W_V_16_t_empty_n and W_V_15_t_empty_n and W_V_14_t_empty_n and W_V_13_t_empty_n and W_V_12_t_empty_n and W_V_11_t_empty_n and W_V_10_t_empty_n and W_V_0_t_empty_n);
    compute_biases_with_multiple_dot_products_U0_start_full_n <= ap_const_logic_1;
    compute_biases_with_multiple_dot_products_U0_start_write <= ap_const_logic_0;
    compute_scores_U0_ap_continue <= ap_sync_continue;
    compute_scores_U0_ap_start <= ((ap_sync_reg_compute_scores_U0_ap_ready xor ap_const_logic_1) and ap_start);
    compute_scores_U0_start_full_n <= ap_const_logic_1;
    compute_scores_U0_start_write <= ap_const_logic_0;
    compute_weights_with_matrix_mult_U0_W_V_0_full_n <= W_V_0_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_10_full_n <= W_V_10_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_11_full_n <= W_V_11_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_12_full_n <= W_V_12_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_13_full_n <= W_V_13_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_14_full_n <= W_V_14_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_15_full_n <= W_V_15_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_16_full_n <= W_V_16_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_17_full_n <= W_V_17_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_18_full_n <= W_V_18_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_19_full_n <= W_V_19_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_1_full_n <= W_V_1_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_20_full_n <= W_V_20_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_21_full_n <= W_V_21_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_22_full_n <= W_V_22_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_23_full_n <= W_V_23_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_24_full_n <= W_V_24_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_25_full_n <= W_V_25_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_26_full_n <= W_V_26_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_27_full_n <= W_V_27_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_28_full_n <= W_V_28_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_29_full_n <= W_V_29_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_2_full_n <= W_V_2_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_30_full_n <= W_V_30_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_31_full_n <= W_V_31_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_3_full_n <= W_V_3_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_4_full_n <= W_V_4_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_5_full_n <= W_V_5_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_6_full_n <= W_V_6_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_7_full_n <= W_V_7_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_8_full_n <= W_V_8_i_full_n;
    compute_weights_with_matrix_mult_U0_W_V_9_full_n <= W_V_9_i_full_n;
    compute_weights_with_matrix_mult_U0_ap_continue <= (ap_sync_channel_write_W_V_9 and ap_sync_channel_write_W_V_8 and ap_sync_channel_write_W_V_7 and ap_sync_channel_write_W_V_6 and ap_sync_channel_write_W_V_5 and ap_sync_channel_write_W_V_4 and ap_sync_channel_write_W_V_31 and ap_sync_channel_write_W_V_30 and ap_sync_channel_write_W_V_3 and ap_sync_channel_write_W_V_29 and ap_sync_channel_write_W_V_28 and ap_sync_channel_write_W_V_27 and ap_sync_channel_write_W_V_26 and ap_sync_channel_write_W_V_25 and ap_sync_channel_write_W_V_24 and ap_sync_channel_write_W_V_23 and ap_sync_channel_write_W_V_22 and ap_sync_channel_write_W_V_21 and ap_sync_channel_write_W_V_20 and ap_sync_channel_write_W_V_2 and ap_sync_channel_write_W_V_19 and ap_sync_channel_write_W_V_18 and ap_sync_channel_write_W_V_17 and ap_sync_channel_write_W_V_16 and ap_sync_channel_write_W_V_15 and ap_sync_channel_write_W_V_14 and ap_sync_channel_write_W_V_13 and ap_sync_channel_write_W_V_12 and ap_sync_channel_write_W_V_11 and ap_sync_channel_write_W_V_10 and ap_sync_channel_write_W_V_1 and ap_sync_channel_write_W_V_0);
    compute_weights_with_matrix_mult_U0_ap_start <= ((ap_sync_reg_compute_weights_with_matrix_mult_U0_ap_ready xor ap_const_logic_1) and ap_start);
    compute_weights_with_matrix_mult_U0_start_full_n <= ap_const_logic_1;
    compute_weights_with_matrix_mult_U0_start_write <= ap_const_logic_0;
    feature_vector_TREADY <= compute_scores_U0_feature_vector_TREADY;
end behav;
