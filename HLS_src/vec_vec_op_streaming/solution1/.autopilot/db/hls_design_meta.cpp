#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("vec1_TDATA", 128, hls_in, 1, "axis", "in_data", 1),
	Port_Property("vec1_TVALID", 1, hls_in, 7, "axis", "in_vld", 1),
	Port_Property("vec1_TREADY", 1, hls_out, 7, "axis", "in_acc", 1),
	Port_Property("vec1_TKEEP", 16, hls_in, 2, "axis", "in_data", 1),
	Port_Property("vec1_TSTRB", 16, hls_in, 3, "axis", "in_data", 1),
	Port_Property("vec1_TUSER", 2, hls_in, 4, "axis", "in_data", 1),
	Port_Property("vec1_TLAST", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("vec1_TID", 5, hls_in, 6, "axis", "in_data", 1),
	Port_Property("vec1_TDEST", 6, hls_in, 7, "axis", "in_data", 1),
	Port_Property("vec2_TDATA", 128, hls_in, 8, "axis", "in_data", 1),
	Port_Property("vec2_TVALID", 1, hls_in, 14, "axis", "in_vld", 1),
	Port_Property("vec2_TREADY", 1, hls_out, 14, "axis", "in_acc", 1),
	Port_Property("vec2_TKEEP", 16, hls_in, 9, "axis", "in_data", 1),
	Port_Property("vec2_TSTRB", 16, hls_in, 10, "axis", "in_data", 1),
	Port_Property("vec2_TUSER", 2, hls_in, 11, "axis", "in_data", 1),
	Port_Property("vec2_TLAST", 1, hls_in, 12, "axis", "in_data", 1),
	Port_Property("vec2_TID", 5, hls_in, 13, "axis", "in_data", 1),
	Port_Property("vec2_TDEST", 6, hls_in, 14, "axis", "in_data", 1),
	Port_Property("vec_out_TDATA", 128, hls_out, 15, "axis", "out_data", 1),
	Port_Property("vec_out_TVALID", 1, hls_out, 21, "axis", "out_vld", 1),
	Port_Property("vec_out_TREADY", 1, hls_in, 21, "axis", "out_acc", 1),
	Port_Property("vec_out_TKEEP", 16, hls_out, 16, "axis", "out_data", 1),
	Port_Property("vec_out_TSTRB", 16, hls_out, 17, "axis", "out_data", 1),
	Port_Property("vec_out_TUSER", 2, hls_out, 18, "axis", "out_data", 1),
	Port_Property("vec_out_TLAST", 1, hls_out, 19, "axis", "out_data", 1),
	Port_Property("vec_out_TID", 5, hls_out, 20, "axis", "out_data", 1),
	Port_Property("vec_out_TDEST", 6, hls_out, 21, "axis", "out_data", 1),
	Port_Property("s_axi_BUS_A_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "vec_vec_op_streaming";
